### YamlMime:ManagedReference
items:
- uid: FriedSynapse.FlowEnt.Flow
  commentId: T:FriedSynapse.FlowEnt.Flow
  id: Flow
  parent: FriedSynapse.FlowEnt
  children:
  - FriedSynapse.FlowEnt.Flow.#ctor(FriedSynapse.FlowEnt.FlowOptions)
  - FriedSynapse.FlowEnt.Flow.#ctor(System.Boolean)
  - FriedSynapse.FlowEnt.Flow.At(System.Single,FriedSynapse.FlowEnt.AbstractAnimation)
  - FriedSynapse.FlowEnt.Flow.At(System.Single,System.Collections.Generic.List{FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Flow})
  - FriedSynapse.FlowEnt.Flow.OnCompleted(System.Action)
  - FriedSynapse.FlowEnt.Flow.OnCompleting(System.Action)
  - FriedSynapse.FlowEnt.Flow.OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  - FriedSynapse.FlowEnt.Flow.OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  - FriedSynapse.FlowEnt.Flow.OnStarted(System.Action)
  - FriedSynapse.FlowEnt.Flow.OnStarting(System.Action)
  - FriedSynapse.FlowEnt.Flow.OnUpdated(System.Action{System.Single})
  - FriedSynapse.FlowEnt.Flow.OnUpdating(System.Action{System.Single})
  - FriedSynapse.FlowEnt.Flow.Pause
  - FriedSynapse.FlowEnt.Flow.Queue(FriedSynapse.FlowEnt.AbstractAnimation)
  - FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.QueueAwaiter(FriedSynapse.FlowEnt.AbstractFlowAwaiter)
  - FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Func{System.Boolean})
  - FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Threading.Tasks.Task)
  - FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.Flow.QueueDelay(System.Single)
  - FriedSynapse.FlowEnt.Flow.Reset
  - FriedSynapse.FlowEnt.Flow.ResetInternal
  - FriedSynapse.FlowEnt.Flow.Resume
  - FriedSynapse.FlowEnt.Flow.SetAutoStart(System.Boolean)
  - FriedSynapse.FlowEnt.Flow.SetDelay(System.Single)
  - FriedSynapse.FlowEnt.Flow.SetDelayUntil(System.Func{System.Boolean})
  - FriedSynapse.FlowEnt.Flow.SetEvents(FriedSynapse.FlowEnt.FlowEvents)
  - FriedSynapse.FlowEnt.Flow.SetEvents(System.Func{FriedSynapse.FlowEnt.FlowEvents,FriedSynapse.FlowEnt.FlowEvents})
  - FriedSynapse.FlowEnt.Flow.SetLoopCount(System.Nullable{System.Int32})
  - FriedSynapse.FlowEnt.Flow.SetName(System.String)
  - FriedSynapse.FlowEnt.Flow.SetOptions(FriedSynapse.FlowEnt.FlowOptions)
  - FriedSynapse.FlowEnt.Flow.SetOptions(System.Func{FriedSynapse.FlowEnt.FlowOptions,FriedSynapse.FlowEnt.FlowOptions})
  - FriedSynapse.FlowEnt.Flow.SetSkipFrames(System.Int32)
  - FriedSynapse.FlowEnt.Flow.SetTimeScale(System.Single)
  - FriedSynapse.FlowEnt.Flow.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  - FriedSynapse.FlowEnt.Flow.Start
  - FriedSynapse.FlowEnt.Flow.StartAsync(System.Nullable{System.Threading.CancellationToken})
  - FriedSynapse.FlowEnt.Flow.Stop(System.Boolean)
  langs:
  - csharp
  - vb
  name: Flow
  nameWithType: Flow
  fullName: FriedSynapse.FlowEnt.Flow
  type: Class
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Flow
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 4
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Provides functionality to create a sequence or multiple sequences of animations.

    For more information please go to https://flowent.friedsynapse.com/flow
  example: []
  syntax:
    content: 'public sealed class Flow : AbstractAnimation, IControllable, IUpdateController'
    content.vb: Public NotInheritable Class Flow Inherits AbstractAnimation Implements IControllable, IUpdateController
  inheritance:
  - System.Object
  - FriedSynapse.FlowEnt.FastListItem{FriedSynapse.FlowEnt.AbstractUpdatable}
  - FriedSynapse.FlowEnt.AbstractUpdatable
  - FriedSynapse.FlowEnt.AbstractAnimation
  implements:
  - FriedSynapse.FlowEnt.IControllable
  - FriedSynapse.FlowEnt.IUpdateController
  inheritedMembers:
  - FriedSynapse.FlowEnt.AbstractAnimation.Controllable
  - FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
  - FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
  - FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
  - FriedSynapse.FlowEnt.AbstractAnimation.PlayState
  - FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
  - FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
  - FriedSynapse.FlowEnt.AbstractUpdatable.Id
  - FriedSynapse.FlowEnt.AbstractUpdatable.Name
  - FriedSynapse.FlowEnt.AbstractUpdatable.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.EchoOptions)
  - FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(System.Nullable{System.Single},System.Boolean)
  - FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Restart``1
  - FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.TweenOptions)
  - FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(System.Single,System.Boolean)
  - System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.String,System.Reflection.BindingFlags)
  - System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.String,System.Reflection.BindingFlags)
  - System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.String,System.Object[],System.Reflection.BindingFlags)
  - System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.String,{T},System.Reflection.BindingFlags)
- uid: FriedSynapse.FlowEnt.Flow.#ctor(FriedSynapse.FlowEnt.FlowOptions)
  commentId: M:FriedSynapse.FlowEnt.Flow.#ctor(FriedSynapse.FlowEnt.FlowOptions)
  id: '#ctor(FriedSynapse.FlowEnt.FlowOptions)'
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Flow(FlowOptions)
  nameWithType: Flow.Flow(FlowOptions)
  fullName: FriedSynapse.FlowEnt.Flow.Flow(FriedSynapse.FlowEnt.FlowOptions)
  type: Constructor
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: .ctor
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 21
  namespace: FriedSynapse.FlowEnt
  summary: Creates a new flow using the options provided.
  example: []
  syntax:
    content: public Flow(FlowOptions options)
    parameters:
    - id: options
      type: FriedSynapse.FlowEnt.FlowOptions
      description: ''
    content.vb: Public Sub New(options As FlowOptions)
  overload: FriedSynapse.FlowEnt.Flow.#ctor*
  nameWithType.vb: Flow.New(FlowOptions)
  fullName.vb: FriedSynapse.FlowEnt.Flow.New(FriedSynapse.FlowEnt.FlowOptions)
  name.vb: New(FlowOptions)
- uid: FriedSynapse.FlowEnt.Flow.#ctor(System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.Flow.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Flow(bool)
  nameWithType: Flow.Flow(bool)
  fullName: FriedSynapse.FlowEnt.Flow.Flow(bool)
  type: Constructor
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: .ctor
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 30
  namespace: FriedSynapse.FlowEnt
  summary: Creates a new flow.
  example: []
  syntax:
    content: public Flow(bool autoStart = false)
    parameters:
    - id: autoStart
      type: System.Boolean
      description: Whether the flow should start automatically or not.
    content.vb: Public Sub New(autoStart As Boolean = False)
  overload: FriedSynapse.FlowEnt.Flow.#ctor*
  nameWithType.vb: Flow.New(Boolean)
  fullName.vb: FriedSynapse.FlowEnt.Flow.New(Boolean)
  name.vb: New(Boolean)
- uid: FriedSynapse.FlowEnt.Flow.Start
  commentId: M:FriedSynapse.FlowEnt.Flow.Start
  id: Start
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Flow.Start()
  fullName: FriedSynapse.FlowEnt.Flow.Start()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Start
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 64
  namespace: FriedSynapse.FlowEnt
  summary: Starts the animation.
  example: []
  syntax:
    content: public Flow Start()
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Start() As Flow
  overload: FriedSynapse.FlowEnt.Flow.Start*
  exceptions:
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the flow has already started.
- uid: FriedSynapse.FlowEnt.Flow.StartAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:FriedSynapse.FlowEnt.Flow.StartAsync(System.Nullable{System.Threading.CancellationToken})
  id: StartAsync(System.Nullable{System.Threading.CancellationToken})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: StartAsync(CancellationToken?)
  nameWithType: Flow.StartAsync(CancellationToken?)
  fullName: FriedSynapse.FlowEnt.Flow.StartAsync(System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: StartAsync
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 73
  namespace: FriedSynapse.FlowEnt
  summary: Starts the animation async(you can await this till the animation finishes).
  example: []
  syntax:
    content: public Task<Flow> StartAsync(CancellationToken? token = null)
    parameters:
    - id: token
      type: System.Nullable{System.Threading.CancellationToken}
      description: The cancellation doesn't cancel the task, but rather terminates the animation. The task will be completed
    return:
      type: System.Threading.Tasks.Task{FriedSynapse.FlowEnt.Flow}
    content.vb: Public Function StartAsync(token As CancellationToken? = Nothing) As Task(Of Flow)
  overload: FriedSynapse.FlowEnt.Flow.StartAsync*
  exceptions:
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the flow has already started.
- uid: FriedSynapse.FlowEnt.Flow.Resume
  commentId: M:FriedSynapse.FlowEnt.Flow.Resume
  id: Resume
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: Flow.Resume()
  fullName: FriedSynapse.FlowEnt.Flow.Resume()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Resume
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 81
  namespace: FriedSynapse.FlowEnt
  summary: Resumes the animation.
  example: []
  syntax:
    content: public Flow Resume()
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function [Resume]() As Flow
  overload: FriedSynapse.FlowEnt.Flow.Resume*
- uid: FriedSynapse.FlowEnt.Flow.Pause
  commentId: M:FriedSynapse.FlowEnt.Flow.Pause
  id: Pause
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: Flow.Pause()
  fullName: FriedSynapse.FlowEnt.Flow.Pause()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Pause
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 89
  namespace: FriedSynapse.FlowEnt
  summary: Pauses the animation.
  example: []
  syntax:
    content: public Flow Pause()
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Pause() As Flow
  overload: FriedSynapse.FlowEnt.Flow.Pause*
- uid: FriedSynapse.FlowEnt.Flow.Stop(System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.Flow.Stop(System.Boolean)
  id: Stop(System.Boolean)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Stop(bool)
  nameWithType: Flow.Stop(bool)
  fullName: FriedSynapse.FlowEnt.Flow.Stop(bool)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Stop
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 97
  namespace: FriedSynapse.FlowEnt
  summary: Stops the animation.
  example: []
  syntax:
    content: public Flow Stop(bool triggerOnCompleted = false)
    parameters:
    - id: triggerOnCompleted
      type: System.Boolean
      description: If set to true will trigger the "OnCompleted" event on the animation
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function [Stop](triggerOnCompleted As Boolean = False) As Flow
  overload: FriedSynapse.FlowEnt.Flow.Stop*
  nameWithType.vb: Flow.Stop(Boolean)
  fullName.vb: FriedSynapse.FlowEnt.Flow.Stop(Boolean)
  name.vb: Stop(Boolean)
- uid: FriedSynapse.FlowEnt.Flow.Reset
  commentId: M:FriedSynapse.FlowEnt.Flow.Reset
  id: Reset
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Flow.Reset()
  fullName: FriedSynapse.FlowEnt.Flow.Reset()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Reset
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 106
  namespace: FriedSynapse.FlowEnt
  summary: Resets the animation so in can be replayed.
  example: []
  syntax:
    content: public Flow Reset()
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Reset() As Flow
  overload: FriedSynapse.FlowEnt.Flow.Reset*
  exceptions:
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the animation is not finished.
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the flow is not finished.
- uid: FriedSynapse.FlowEnt.Flow.ResetInternal
  commentId: M:FriedSynapse.FlowEnt.Flow.ResetInternal
  id: ResetInternal
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: ResetInternal()
  nameWithType: Flow.ResetInternal()
  fullName: FriedSynapse.FlowEnt.Flow.ResetInternal()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: ResetInternal
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.cs
    startLine: 252
  namespace: FriedSynapse.FlowEnt
  example: []
  syntax:
    content: protected override void ResetInternal()
    content.vb: Protected Overrides Sub ResetInternal()
  overridden: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
  overload: FriedSynapse.FlowEnt.Flow.ResetInternal*
- uid: FriedSynapse.FlowEnt.Flow.Queue(FriedSynapse.FlowEnt.AbstractAnimation)
  commentId: M:FriedSynapse.FlowEnt.Flow.Queue(FriedSynapse.FlowEnt.AbstractAnimation)
  id: Queue(FriedSynapse.FlowEnt.AbstractAnimation)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Queue(AbstractAnimation)
  nameWithType: Flow.Queue(AbstractAnimation)
  fullName: FriedSynapse.FlowEnt.Flow.Queue(FriedSynapse.FlowEnt.AbstractAnimation)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Queue
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 69
  namespace: FriedSynapse.FlowEnt
  summary: Queues an animation in the current sequence.
  example: []
  syntax:
    content: public Flow Queue(AbstractAnimation animation)
    parameters:
    - id: animation
      type: FriedSynapse.FlowEnt.AbstractAnimation
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Queue(animation As AbstractAnimation) As Flow
  overload: FriedSynapse.FlowEnt.Flow.Queue*
- uid: FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  id: Queue(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Queue(Func<Tween, AbstractAnimation>)
  nameWithType: Flow.Queue(Func<Tween, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.Queue(System.Func<FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Queue
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 78
  namespace: FriedSynapse.FlowEnt
  summary: Queues an animation in the current sequence.
  example: []
  syntax:
    content: public Flow Queue(Func<Tween, AbstractAnimation> builder)
    parameters:
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Queue(builder As Func(Of Tween, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.Queue*
  nameWithType.vb: Flow.Queue(Func(Of Tween, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.Queue(System.Func(Of FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: Queue(Func(Of Tween, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  id: Queue(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Queue(Func<Echo, AbstractAnimation>)
  nameWithType: Flow.Queue(Func<Echo, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.Queue(System.Func<FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Queue
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 83
  namespace: FriedSynapse.FlowEnt
  summary: Queues an animation in the current sequence.
  example: []
  syntax:
    content: public Flow Queue(Func<Echo, AbstractAnimation> builder)
    parameters:
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Queue(builder As Func(Of Echo, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.Queue*
  nameWithType.vb: Flow.Queue(Func(Of Echo, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.Queue(System.Func(Of FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: Queue(Func(Of Echo, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.Queue(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  id: Queue(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Queue(Func<Flow, AbstractAnimation>)
  nameWithType: Flow.Queue(Func<Flow, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.Queue(System.Func<FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Queue
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 88
  namespace: FriedSynapse.FlowEnt
  summary: Queues an animation in the current sequence.
  example: []
  syntax:
    content: public Flow Queue(Func<Flow, AbstractAnimation> builder)
    parameters:
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Queue(builder As Func(Of Flow, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.Queue*
  nameWithType.vb: Flow.Queue(Func(Of Flow, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.Queue(System.Func(Of FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: Queue(Func(Of Flow, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.QueueAwaiter(FriedSynapse.FlowEnt.AbstractFlowAwaiter)
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueAwaiter(FriedSynapse.FlowEnt.AbstractFlowAwaiter)
  id: QueueAwaiter(FriedSynapse.FlowEnt.AbstractFlowAwaiter)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueAwaiter(AbstractFlowAwaiter)
  nameWithType: Flow.QueueAwaiter(AbstractFlowAwaiter)
  fullName: FriedSynapse.FlowEnt.Flow.QueueAwaiter(FriedSynapse.FlowEnt.AbstractFlowAwaiter)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueAwaiter
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 95
  namespace: FriedSynapse.FlowEnt
  summary: Queues an awaiter in the current sequence.
  example: []
  syntax:
    content: public Flow QueueAwaiter(AbstractFlowAwaiter flowAwaiter)
    parameters:
    - id: flowAwaiter
      type: FriedSynapse.FlowEnt.AbstractFlowAwaiter
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueAwaiter(flowAwaiter As AbstractFlowAwaiter) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueAwaiter*
- uid: FriedSynapse.FlowEnt.Flow.QueueDelay(System.Single)
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueDelay(System.Single)
  id: QueueDelay(System.Single)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueDelay(float)
  nameWithType: Flow.QueueDelay(float)
  fullName: FriedSynapse.FlowEnt.Flow.QueueDelay(float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueDelay
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 105
  namespace: FriedSynapse.FlowEnt
  summary: Queues a delay in the current sequence.
  example: []
  syntax:
    content: public Flow QueueDelay(float delay)
    parameters:
    - id: delay
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueDelay(delay As Single) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueDelay*
  nameWithType.vb: Flow.QueueDelay(Single)
  fullName.vb: FriedSynapse.FlowEnt.Flow.QueueDelay(Single)
  name.vb: QueueDelay(Single)
- uid: FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Func{System.Boolean})
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Func{System.Boolean})
  id: QueueAwaiter(System.Func{System.Boolean})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueAwaiter(Func<bool>)
  nameWithType: Flow.QueueAwaiter(Func<bool>)
  fullName: FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Func<bool>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueAwaiter
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 112
  namespace: FriedSynapse.FlowEnt
  summary: Queues a callback as an awaiter in the current sequence.
  example: []
  syntax:
    content: public Flow QueueAwaiter(Func<bool> waitCondition)
    parameters:
    - id: waitCondition
      type: System.Func{System.Boolean}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueAwaiter(waitCondition As Func(Of Boolean)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueAwaiter*
  nameWithType.vb: Flow.QueueAwaiter(Func(Of Boolean))
  fullName.vb: FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Func(Of Boolean))
  name.vb: QueueAwaiter(Func(Of Boolean))
- uid: FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Threading.Tasks.Task)
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Threading.Tasks.Task)
  id: QueueAwaiter(System.Threading.Tasks.Task)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueAwaiter(Task)
  nameWithType: Flow.QueueAwaiter(Task)
  fullName: FriedSynapse.FlowEnt.Flow.QueueAwaiter(System.Threading.Tasks.Task)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueAwaiter
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 119
  namespace: FriedSynapse.FlowEnt
  summary: Queues a task as an awaiter in the current sequence.
  example: []
  syntax:
    content: public Flow QueueAwaiter(Task task)
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueAwaiter(task As Task) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueAwaiter*
- uid: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  id: QueueDeferred(System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueDeferred(Func<AbstractAnimation>)
  nameWithType: Flow.QueueDeferred(Func<AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func<FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 131
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Queues a callback for the animation builder in the current sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow QueueDeferred(Func<AbstractAnimation> builder)
    parameters:
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueDeferred(builder As Func(Of AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueDeferred*
  nameWithType.vb: Flow.QueueDeferred(Func(Of AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func(Of FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: QueueDeferred(Func(Of AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  id: QueueDeferred(System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueDeferred(Func<Tween, AbstractAnimation>)
  nameWithType: Flow.QueueDeferred(Func<Tween, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func<FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 139
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Queues a callback for the animation builder in the current sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow QueueDeferred(Func<Tween, AbstractAnimation> builder)
    parameters:
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueDeferred(builder As Func(Of Tween, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueDeferred*
  nameWithType.vb: Flow.QueueDeferred(Func(Of Tween, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func(Of FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: QueueDeferred(Func(Of Tween, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  id: QueueDeferred(System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueDeferred(Func<Echo, AbstractAnimation>)
  nameWithType: Flow.QueueDeferred(Func<Echo, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func<FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 144
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Queues a callback for the animation builder in the current sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow QueueDeferred(Func<Echo, AbstractAnimation> builder)
    parameters:
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueDeferred(builder As Func(Of Echo, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueDeferred*
  nameWithType.vb: Flow.QueueDeferred(Func(Of Echo, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func(Of FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: QueueDeferred(Func(Of Echo, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  id: QueueDeferred(System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: QueueDeferred(Func<Flow, AbstractAnimation>)
  nameWithType: Flow.QueueDeferred(Func<Flow, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func<FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: QueueDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 149
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Queues a callback for the animation builder in the current sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow QueueDeferred(Func<Flow, AbstractAnimation> builder)
    parameters:
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function QueueDeferred(builder As Func(Of Flow, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.QueueDeferred*
  nameWithType.vb: Flow.QueueDeferred(Func(Of Flow, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.QueueDeferred(System.Func(Of FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: QueueDeferred(Func(Of Flow, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.At(System.Single,FriedSynapse.FlowEnt.AbstractAnimation)
  commentId: M:FriedSynapse.FlowEnt.Flow.At(System.Single,FriedSynapse.FlowEnt.AbstractAnimation)
  id: At(System.Single,FriedSynapse.FlowEnt.AbstractAnimation)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: At(float, AbstractAnimation)
  nameWithType: Flow.At(float, AbstractAnimation)
  fullName: FriedSynapse.FlowEnt.Flow.At(float, FriedSynapse.FlowEnt.AbstractAnimation)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: At
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 161
  namespace: FriedSynapse.FlowEnt
  summary: Starts a new sequence at the <code class="paramref">timeIndex</code> provided.
  example: []
  syntax:
    content: public Flow At(float timeIndex, AbstractAnimation animation)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: animation
      type: FriedSynapse.FlowEnt.AbstractAnimation
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function At(timeIndex As Single, animation As AbstractAnimation) As Flow
  overload: FriedSynapse.FlowEnt.Flow.At*
  nameWithType.vb: Flow.At(Single, AbstractAnimation)
  fullName.vb: FriedSynapse.FlowEnt.Flow.At(Single, FriedSynapse.FlowEnt.AbstractAnimation)
  name.vb: At(Single, AbstractAnimation)
- uid: FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  id: At(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: At(float, Func<Tween, AbstractAnimation>)
  nameWithType: Flow.At(float, Func<Tween, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.At(float, System.Func<FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: At
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 185
  namespace: FriedSynapse.FlowEnt
  summary: Starts a new sequence at the <code class="paramref">timeIndex</code> provided.
  example: []
  syntax:
    content: public Flow At(float timeIndex, Func<Tween, AbstractAnimation> builder)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function At(timeIndex As Single, builder As Func(Of Tween, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.At*
  nameWithType.vb: Flow.At(Single, Func(Of Tween, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.At(Single, System.Func(Of FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: At(Single, Func(Of Tween, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  id: At(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: At(float, Func<Echo, AbstractAnimation>)
  nameWithType: Flow.At(float, Func<Echo, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.At(float, System.Func<FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: At
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 190
  namespace: FriedSynapse.FlowEnt
  summary: Starts a new sequence at the <code class="paramref">timeIndex</code> provided.
  example: []
  syntax:
    content: public Flow At(float timeIndex, Func<Echo, AbstractAnimation> builder)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function At(timeIndex As Single, builder As Func(Of Echo, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.At*
  nameWithType.vb: Flow.At(Single, Func(Of Echo, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.At(Single, System.Func(Of FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: At(Single, Func(Of Echo, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.At(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  id: At(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: At(float, Func<Flow, AbstractAnimation>)
  nameWithType: Flow.At(float, Func<Flow, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.At(float, System.Func<FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: At
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 195
  namespace: FriedSynapse.FlowEnt
  summary: Starts a new sequence at the <code class="paramref">timeIndex</code> provided.
  example: []
  syntax:
    content: public Flow At(float timeIndex, Func<Flow, AbstractAnimation> builder)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function At(timeIndex As Single, builder As Func(Of Flow, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.At*
  nameWithType.vb: Flow.At(Single, Func(Of Flow, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.At(Single, System.Func(Of FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: At(Single, Func(Of Flow, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.At(System.Single,System.Collections.Generic.List{FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.At(System.Single,System.Collections.Generic.List{FriedSynapse.FlowEnt.AbstractAnimation})
  id: At(System.Single,System.Collections.Generic.List{FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: At(float, List<AbstractAnimation>)
  nameWithType: Flow.At(float, List<AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.At(float, System.Collections.Generic.List<FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: At
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 200
  namespace: FriedSynapse.FlowEnt
  summary: Starts a new sequence at the <code class="paramref">timeIndex</code> provided.
  example: []
  syntax:
    content: public Flow At(float timeIndex, List<AbstractAnimation> animations)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: animations
      type: System.Collections.Generic.List{FriedSynapse.FlowEnt.AbstractAnimation}
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function At(timeIndex As Single, animations As List(Of AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.At*
  nameWithType.vb: Flow.At(Single, List(Of AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.At(Single, System.Collections.Generic.List(Of FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: At(Single, List(Of AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  id: AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: AtDeferred(float, Func<AbstractAnimation>)
  nameWithType: Flow.AtDeferred(float, Func<AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.AtDeferred(float, System.Func<FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: AtDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 226
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Starts a new sequence at the <code class="paramref">timeIndex</code> provided and uses the callback for the animation builder to add an animation to the sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow AtDeferred(float timeIndex, Func<AbstractAnimation> builder)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function AtDeferred(timeIndex As Single, builder As Func(Of AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.AtDeferred*
  nameWithType.vb: Flow.AtDeferred(Single, Func(Of AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.AtDeferred(Single, System.Func(Of FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: AtDeferred(Single, Func(Of AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  id: AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: AtDeferred(float, Func<Tween, AbstractAnimation>)
  nameWithType: Flow.AtDeferred(float, Func<Tween, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.AtDeferred(float, System.Func<FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: AtDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 248
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Starts a new sequence at the <code class="paramref">timeIndex</code> provided and uses the callback for the animation builder to add an animation to the sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow AtDeferred(float timeIndex, Func<Tween, AbstractAnimation> builder)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function AtDeferred(timeIndex As Single, builder As Func(Of Tween, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.AtDeferred*
  nameWithType.vb: Flow.AtDeferred(Single, Func(Of Tween, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.AtDeferred(Single, System.Func(Of FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: AtDeferred(Single, Func(Of Tween, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  id: AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: AtDeferred(float, Func<Echo, AbstractAnimation>)
  nameWithType: Flow.AtDeferred(float, Func<Echo, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.AtDeferred(float, System.Func<FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: AtDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 253
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Starts a new sequence at the <code class="paramref">timeIndex</code> provided and uses the callback for the animation builder to add an animation to the sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow AtDeferred(float timeIndex, Func<Echo, AbstractAnimation> builder)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function AtDeferred(timeIndex As Single, builder As Func(Of Echo, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.AtDeferred*
  nameWithType.vb: Flow.AtDeferred(Single, Func(Of Echo, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.AtDeferred(Single, System.Func(Of FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: AtDeferred(Single, Func(Of Echo, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.Flow.AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  id: AtDeferred(System.Single,System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: AtDeferred(float, Func<Flow, AbstractAnimation>)
  nameWithType: Flow.AtDeferred(float, Func<Flow, AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.Flow.AtDeferred(float, System.Func<FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: AtDeferred
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Threads.cs
    startLine: 258
  namespace: FriedSynapse.FlowEnt
  summary: >-
    Starts a new sequence at the <code class="paramref">timeIndex</code> provided and uses the callback for the animation builder to add an animation to the sequence.

    This is useful when you need to create an animation after the current flow has started.
  example: []
  syntax:
    content: public Flow AtDeferred(float timeIndex, Func<Flow, AbstractAnimation> builder)
    parameters:
    - id: timeIndex
      type: System.Single
      description: Time index for the sequence to start.
    - id: builder
      type: System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation}
      description: Callback to build the animation.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function AtDeferred(timeIndex As Single, builder As Func(Of Flow, AbstractAnimation)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.AtDeferred*
  nameWithType.vb: Flow.AtDeferred(Single, Func(Of Flow, AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.Flow.AtDeferred(Single, System.Func(Of FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: AtDeferred(Single, Func(Of Flow, AbstractAnimation))
- uid: FriedSynapse.FlowEnt.Flow.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Flow})
  commentId: M:FriedSynapse.FlowEnt.Flow.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Flow})
  id: Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Flow})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: Conditional(Func<bool>, Action<Flow>)
  nameWithType: Flow.Conditional(Func<bool>, Action<Flow>)
  fullName: FriedSynapse.FlowEnt.Flow.Conditional(System.Func<bool>, System.Action<FriedSynapse.FlowEnt.Flow>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Conditional
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 8
  namespace: FriedSynapse.FlowEnt
  summary: Executes the <code class="paramref">onConditionTrue</code> if <code class="paramref">condition</code> returns true.
  example: []
  syntax:
    content: public Flow Conditional(Func<bool> condition, Action<Flow> onConditionTrue)
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: The condition.
    - id: onConditionTrue
      type: System.Action{FriedSynapse.FlowEnt.Flow}
      description: The callback.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function Conditional(condition As Func(Of Boolean), onConditionTrue As Action(Of Flow)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.Conditional*
  nameWithType.vb: Flow.Conditional(Func(Of Boolean), Action(Of Flow))
  fullName.vb: FriedSynapse.FlowEnt.Flow.Conditional(System.Func(Of Boolean), System.Action(Of FriedSynapse.FlowEnt.Flow))
  name.vb: Conditional(Func(Of Boolean), Action(Of Flow))
- uid: FriedSynapse.FlowEnt.Flow.SetOptions(FriedSynapse.FlowEnt.FlowOptions)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetOptions(FriedSynapse.FlowEnt.FlowOptions)
  id: SetOptions(FriedSynapse.FlowEnt.FlowOptions)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetOptions(FlowOptions)
  nameWithType: Flow.SetOptions(FlowOptions)
  fullName: FriedSynapse.FlowEnt.Flow.SetOptions(FriedSynapse.FlowEnt.FlowOptions)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetOptions
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 15
  namespace: FriedSynapse.FlowEnt
  summary: Sets all the options for this flow.
  example: []
  syntax:
    content: public Flow SetOptions(FlowOptions options)
    parameters:
    - id: options
      type: FriedSynapse.FlowEnt.FlowOptions
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetOptions(options As FlowOptions) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetOptions*
- uid: FriedSynapse.FlowEnt.Flow.SetOptions(System.Func{FriedSynapse.FlowEnt.FlowOptions,FriedSynapse.FlowEnt.FlowOptions})
  commentId: M:FriedSynapse.FlowEnt.Flow.SetOptions(System.Func{FriedSynapse.FlowEnt.FlowOptions,FriedSynapse.FlowEnt.FlowOptions})
  id: SetOptions(System.Func{FriedSynapse.FlowEnt.FlowOptions,FriedSynapse.FlowEnt.FlowOptions})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetOptions(Func<FlowOptions, FlowOptions>)
  nameWithType: Flow.SetOptions(Func<FlowOptions, FlowOptions>)
  fullName: FriedSynapse.FlowEnt.Flow.SetOptions(System.Func<FriedSynapse.FlowEnt.FlowOptions, FriedSynapse.FlowEnt.FlowOptions>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetOptions
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 25
  namespace: FriedSynapse.FlowEnt
  summary: Creates a builder for options and then sets all the options for this flow.
  example: []
  syntax:
    content: public Flow SetOptions(Func<FlowOptions, FlowOptions> optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: System.Func{FriedSynapse.FlowEnt.FlowOptions,FriedSynapse.FlowEnt.FlowOptions}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetOptions(optionsBuilder As Func(Of FlowOptions, FlowOptions)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetOptions*
  nameWithType.vb: Flow.SetOptions(Func(Of FlowOptions, FlowOptions))
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetOptions(System.Func(Of FriedSynapse.FlowEnt.FlowOptions, FriedSynapse.FlowEnt.FlowOptions))
  name.vb: SetOptions(Func(Of FlowOptions, FlowOptions))
- uid: FriedSynapse.FlowEnt.Flow.SetName(System.String)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetName(System.String)
  id: SetName(System.String)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetName(string)
  nameWithType: Flow.SetName(string)
  fullName: FriedSynapse.FlowEnt.Flow.SetName(string)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetName
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 30
  namespace: FriedSynapse.FlowEnt
  summary: Sets the name of the animation.
  example: []
  syntax:
    content: public Flow SetName(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetName(name As String) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetName*
  nameWithType.vb: Flow.SetName(String)
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetName(String)
  name.vb: SetName(String)
- uid: FriedSynapse.FlowEnt.Flow.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  id: SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetUpdateType(UpdateType)
  nameWithType: Flow.SetUpdateType(UpdateType)
  fullName: FriedSynapse.FlowEnt.Flow.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetUpdateType
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 38
  namespace: FriedSynapse.FlowEnt
  summary: Sets the update type for the animation.
  example: []
  syntax:
    content: public Flow SetUpdateType(UpdateType updateType)
    parameters:
    - id: updateType
      type: FriedSynapse.FlowEnt.UpdateType
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetUpdateType(updateType As UpdateType) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetUpdateType*
- uid: FriedSynapse.FlowEnt.Flow.SetAutoStart(System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetAutoStart(System.Boolean)
  id: SetAutoStart(System.Boolean)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetAutoStart(bool)
  nameWithType: Flow.SetAutoStart(bool)
  fullName: FriedSynapse.FlowEnt.Flow.SetAutoStart(bool)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetAutoStart
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 46
  namespace: FriedSynapse.FlowEnt
  summary: Sets whether this animation should auto-start or not.
  remarks: Auto-start will be slower than a true-start. See more at https://flowent.friedsynapse.com/tips#h.s5cucrg5qyjc
  example: []
  syntax:
    content: public Flow SetAutoStart(bool autoStart)
    parameters:
    - id: autoStart
      type: System.Boolean
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetAutoStart(autoStart As Boolean) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetAutoStart*
  nameWithType.vb: Flow.SetAutoStart(Boolean)
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetAutoStart(Boolean)
  name.vb: SetAutoStart(Boolean)
- uid: FriedSynapse.FlowEnt.Flow.SetSkipFrames(System.Int32)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetSkipFrames(System.Int32)
  id: SetSkipFrames(System.Int32)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetSkipFrames(int)
  nameWithType: Flow.SetSkipFrames(int)
  fullName: FriedSynapse.FlowEnt.Flow.SetSkipFrames(int)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetSkipFrames
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 54
  namespace: FriedSynapse.FlowEnt
  summary: Sets the amount of frames you want to skip at when this animation is started.
  example: []
  syntax:
    content: public Flow SetSkipFrames(int frames)
    parameters:
    - id: frames
      type: System.Int32
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetSkipFrames(frames As Integer) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetSkipFrames*
  nameWithType.vb: Flow.SetSkipFrames(Integer)
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetSkipFrames(Integer)
  name.vb: SetSkipFrames(Integer)
- uid: FriedSynapse.FlowEnt.Flow.SetDelay(System.Single)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetDelay(System.Single)
  id: SetDelay(System.Single)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetDelay(float)
  nameWithType: Flow.SetDelay(float)
  fullName: FriedSynapse.FlowEnt.Flow.SetDelay(float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetDelay
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 62
  namespace: FriedSynapse.FlowEnt
  summary: Sets the amount of time in seconds that you want to delay when this animation is started.
  example: []
  syntax:
    content: public Flow SetDelay(float time)
    parameters:
    - id: time
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetDelay(time As Single) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetDelay*
  nameWithType.vb: Flow.SetDelay(Single)
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetDelay(Single)
  name.vb: SetDelay(Single)
- uid: FriedSynapse.FlowEnt.Flow.SetDelayUntil(System.Func{System.Boolean})
  commentId: M:FriedSynapse.FlowEnt.Flow.SetDelayUntil(System.Func{System.Boolean})
  id: SetDelayUntil(System.Func{System.Boolean})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetDelayUntil(Func<bool>)
  nameWithType: Flow.SetDelayUntil(Func<bool>)
  fullName: FriedSynapse.FlowEnt.Flow.SetDelayUntil(System.Func<bool>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetDelayUntil
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 70
  namespace: FriedSynapse.FlowEnt
  summary: Sets the callback that holds the starting of the animation.
  example: []
  syntax:
    content: public Flow SetDelayUntil(Func<bool> callback)
    parameters:
    - id: callback
      type: System.Func{System.Boolean}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetDelayUntil(callback As Func(Of Boolean)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetDelayUntil*
  nameWithType.vb: Flow.SetDelayUntil(Func(Of Boolean))
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetDelayUntil(System.Func(Of Boolean))
  name.vb: SetDelayUntil(Func(Of Boolean))
- uid: FriedSynapse.FlowEnt.Flow.SetLoopCount(System.Nullable{System.Int32})
  commentId: M:FriedSynapse.FlowEnt.Flow.SetLoopCount(System.Nullable{System.Int32})
  id: SetLoopCount(System.Nullable{System.Int32})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetLoopCount(int?)
  nameWithType: Flow.SetLoopCount(int?)
  fullName: FriedSynapse.FlowEnt.Flow.SetLoopCount(int?)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetLoopCount
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 78
  namespace: FriedSynapse.FlowEnt
  summary: Sets the amount of loops you want this animation to have. If you want infinite loops pass a null value.
  remarks: Flows only have reset loop types.
  example: []
  syntax:
    content: public Flow SetLoopCount(int? loopCount)
    parameters:
    - id: loopCount
      type: System.Nullable{System.Int32}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetLoopCount(loopCount As Integer?) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetLoopCount*
  nameWithType.vb: Flow.SetLoopCount(Integer?)
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetLoopCount(Integer?)
  name.vb: SetLoopCount(Integer?)
- uid: FriedSynapse.FlowEnt.Flow.SetTimeScale(System.Single)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetTimeScale(System.Single)
  id: SetTimeScale(System.Single)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetTimeScale(float)
  nameWithType: Flow.SetTimeScale(float)
  fullName: FriedSynapse.FlowEnt.Flow.SetTimeScale(float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetTimeScale
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Options.cs
    startLine: 86
  namespace: FriedSynapse.FlowEnt
  summary: Sets the time scale for the current animation.
  example: []
  syntax:
    content: public Flow SetTimeScale(float timeScale)
    parameters:
    - id: timeScale
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetTimeScale(timeScale As Single) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetTimeScale*
  nameWithType.vb: Flow.SetTimeScale(Single)
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetTimeScale(Single)
  name.vb: SetTimeScale(Single)
- uid: FriedSynapse.FlowEnt.Flow.SetEvents(FriedSynapse.FlowEnt.FlowEvents)
  commentId: M:FriedSynapse.FlowEnt.Flow.SetEvents(FriedSynapse.FlowEnt.FlowEvents)
  id: SetEvents(FriedSynapse.FlowEnt.FlowEvents)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetEvents(FlowEvents)
  nameWithType: Flow.SetEvents(FlowEvents)
  fullName: FriedSynapse.FlowEnt.Flow.SetEvents(FriedSynapse.FlowEnt.FlowEvents)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetEvents
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 10
  namespace: FriedSynapse.FlowEnt
  summary: Sets all the events for this flow.
  example: []
  syntax:
    content: public Flow SetEvents(FlowEvents events)
    parameters:
    - id: events
      type: FriedSynapse.FlowEnt.FlowEvents
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetEvents(events As FlowEvents) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetEvents*
- uid: FriedSynapse.FlowEnt.Flow.SetEvents(System.Func{FriedSynapse.FlowEnt.FlowEvents,FriedSynapse.FlowEnt.FlowEvents})
  commentId: M:FriedSynapse.FlowEnt.Flow.SetEvents(System.Func{FriedSynapse.FlowEnt.FlowEvents,FriedSynapse.FlowEnt.FlowEvents})
  id: SetEvents(System.Func{FriedSynapse.FlowEnt.FlowEvents,FriedSynapse.FlowEnt.FlowEvents})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: SetEvents(Func<FlowEvents, FlowEvents>)
  nameWithType: Flow.SetEvents(Func<FlowEvents, FlowEvents>)
  fullName: FriedSynapse.FlowEnt.Flow.SetEvents(System.Func<FriedSynapse.FlowEnt.FlowEvents, FriedSynapse.FlowEnt.FlowEvents>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetEvents
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 20
  namespace: FriedSynapse.FlowEnt
  summary: Creates a builder for events and then sets all the events for this flow.
  example: []
  syntax:
    content: public Flow SetEvents(Func<FlowEvents, FlowEvents> eventsBuilder)
    parameters:
    - id: eventsBuilder
      type: System.Func{FriedSynapse.FlowEnt.FlowEvents,FriedSynapse.FlowEnt.FlowEvents}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function SetEvents(eventsBuilder As Func(Of FlowEvents, FlowEvents)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.SetEvents*
  nameWithType.vb: Flow.SetEvents(Func(Of FlowEvents, FlowEvents))
  fullName.vb: FriedSynapse.FlowEnt.Flow.SetEvents(System.Func(Of FriedSynapse.FlowEnt.FlowEvents, FriedSynapse.FlowEnt.FlowEvents))
  name.vb: SetEvents(Func(Of FlowEvents, FlowEvents))
- uid: FriedSynapse.FlowEnt.Flow.OnStarting(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Flow.OnStarting(System.Action)
  id: OnStarting(System.Action)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnStarting(Action)
  nameWithType: Flow.OnStarting(Action)
  fullName: FriedSynapse.FlowEnt.Flow.OnStarting(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnStarting
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 25
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation is starting.
  example: []
  syntax:
    content: public Flow OnStarting(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnStarting(callback As Action) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnStarting*
- uid: FriedSynapse.FlowEnt.Flow.OnStarted(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Flow.OnStarted(System.Action)
  id: OnStarted(System.Action)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnStarted(Action)
  nameWithType: Flow.OnStarted(Action)
  fullName: FriedSynapse.FlowEnt.Flow.OnStarted(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnStarted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 33
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation has started.
  example: []
  syntax:
    content: public Flow OnStarted(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnStarted(callback As Action) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnStarted*
- uid: FriedSynapse.FlowEnt.Flow.OnUpdating(System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.Flow.OnUpdating(System.Action{System.Single})
  id: OnUpdating(System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnUpdating(Action<float>)
  nameWithType: Flow.OnUpdating(Action<float>)
  fullName: FriedSynapse.FlowEnt.Flow.OnUpdating(System.Action<float>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnUpdating
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 41
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation is updating.
  example: []
  syntax:
    content: public Flow OnUpdating(Action<float> callback)
    parameters:
    - id: callback
      type: System.Action{System.Single}
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnUpdating(callback As Action(Of Single)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnUpdating*
  nameWithType.vb: Flow.OnUpdating(Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.Flow.OnUpdating(System.Action(Of Single))
  name.vb: OnUpdating(Action(Of Single))
- uid: FriedSynapse.FlowEnt.Flow.OnUpdated(System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.Flow.OnUpdated(System.Action{System.Single})
  id: OnUpdated(System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnUpdated(Action<float>)
  nameWithType: Flow.OnUpdated(Action<float>)
  fullName: FriedSynapse.FlowEnt.Flow.OnUpdated(System.Action<float>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnUpdated
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 49
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation has updated.
  example: []
  syntax:
    content: public Flow OnUpdated(Action<float> callback)
    parameters:
    - id: callback
      type: System.Action{System.Single}
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnUpdated(callback As Action(Of Single)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnUpdated*
  nameWithType.vb: Flow.OnUpdated(Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.Flow.OnUpdated(System.Action(Of Single))
  name.vb: OnUpdated(Action(Of Single))
- uid: FriedSynapse.FlowEnt.Flow.OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  commentId: M:FriedSynapse.FlowEnt.Flow.OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  id: OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnLoopStarted(Action<int?>)
  nameWithType: Flow.OnLoopStarted(Action<int?>)
  fullName: FriedSynapse.FlowEnt.Flow.OnLoopStarted(System.Action<int?>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnLoopStarted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 57
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation loop has started.
  example: []
  syntax:
    content: public Flow OnLoopStarted(Action<int?> callback)
    parameters:
    - id: callback
      type: System.Action{System.Nullable{System.Int32}}
      description: The event. The parameter represents the number of loops left. If there are infinite loops it'll send a null param.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnLoopStarted(callback As Action(Of Integer?)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnLoopStarted*
  nameWithType.vb: Flow.OnLoopStarted(Action(Of Integer?))
  fullName.vb: FriedSynapse.FlowEnt.Flow.OnLoopStarted(System.Action(Of Integer?))
  name.vb: OnLoopStarted(Action(Of Integer?))
- uid: FriedSynapse.FlowEnt.Flow.OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  commentId: M:FriedSynapse.FlowEnt.Flow.OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  id: OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnLoopCompleted(Action<int?>)
  nameWithType: Flow.OnLoopCompleted(Action<int?>)
  fullName: FriedSynapse.FlowEnt.Flow.OnLoopCompleted(System.Action<int?>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnLoopCompleted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 65
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation loop has completed.
  example: []
  syntax:
    content: public Flow OnLoopCompleted(Action<int?> callback)
    parameters:
    - id: callback
      type: System.Action{System.Nullable{System.Int32}}
      description: The event. The parameter represents the number of loops left. If there are infinite loops it'll send a null param.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnLoopCompleted(callback As Action(Of Integer?)) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnLoopCompleted*
  nameWithType.vb: Flow.OnLoopCompleted(Action(Of Integer?))
  fullName.vb: FriedSynapse.FlowEnt.Flow.OnLoopCompleted(System.Action(Of Integer?))
  name.vb: OnLoopCompleted(Action(Of Integer?))
- uid: FriedSynapse.FlowEnt.Flow.OnCompleting(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Flow.OnCompleting(System.Action)
  id: OnCompleting(System.Action)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnCompleting(Action)
  nameWithType: Flow.OnCompleting(Action)
  fullName: FriedSynapse.FlowEnt.Flow.OnCompleting(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnCompleting
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 73
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation is completing.
  example: []
  syntax:
    content: public Flow OnCompleting(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnCompleting(callback As Action) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnCompleting*
- uid: FriedSynapse.FlowEnt.Flow.OnCompleted(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Flow.OnCompleted(System.Action)
  id: OnCompleted(System.Action)
  parent: FriedSynapse.FlowEnt.Flow
  langs:
  - csharp
  - vb
  name: OnCompleted(Action)
  nameWithType: Flow.OnCompleted(Action)
  fullName: FriedSynapse.FlowEnt.Flow.OnCompleted(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnCompleted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Flow/Flow.Events.cs
    startLine: 81
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation has completed.
  example: []
  syntax:
    content: public Flow OnCompleted(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Flow
    content.vb: Public Function OnCompleted(callback As Action) As Flow
  overload: FriedSynapse.FlowEnt.Flow.OnCompleted*
references:
- uid: FriedSynapse.FlowEnt
  commentId: N:FriedSynapse.FlowEnt
  href: FriedSynapse.html
  name: FriedSynapse.FlowEnt
  nameWithType: FriedSynapse.FlowEnt
  fullName: FriedSynapse.FlowEnt
  spec.csharp:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  spec.vb:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FriedSynapse.FlowEnt.FastListItem{FriedSynapse.FlowEnt.AbstractUpdatable}
  commentId: T:FriedSynapse.FlowEnt.FastListItem{FriedSynapse.FlowEnt.AbstractUpdatable}
  parent: FriedSynapse.FlowEnt
  definition: FriedSynapse.FlowEnt.FastListItem`1
  href: FriedSynapse.FlowEnt.FastListItem-1.html
  name: FastListItem<AbstractUpdatable>
  nameWithType: FastListItem<AbstractUpdatable>
  fullName: FriedSynapse.FlowEnt.FastListItem<FriedSynapse.FlowEnt.AbstractUpdatable>
  nameWithType.vb: FastListItem(Of AbstractUpdatable)
  fullName.vb: FriedSynapse.FlowEnt.FastListItem(Of FriedSynapse.FlowEnt.AbstractUpdatable)
  name.vb: FastListItem(Of AbstractUpdatable)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: <
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable
    name: AbstractUpdatable
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable
    name: AbstractUpdatable
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html
  - name: )
- uid: FriedSynapse.FlowEnt.AbstractUpdatable
  commentId: T:FriedSynapse.FlowEnt.AbstractUpdatable
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html
  name: AbstractUpdatable
  nameWithType: AbstractUpdatable
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable
- uid: FriedSynapse.FlowEnt.AbstractAnimation
  commentId: T:FriedSynapse.FlowEnt.AbstractAnimation
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.AbstractAnimation.html
  name: AbstractAnimation
  nameWithType: AbstractAnimation
  fullName: FriedSynapse.FlowEnt.AbstractAnimation
- uid: FriedSynapse.FlowEnt.IControllable
  commentId: T:FriedSynapse.FlowEnt.IControllable
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.IControllable.html
  name: IControllable
  nameWithType: IControllable
  fullName: FriedSynapse.FlowEnt.IControllable
- uid: FriedSynapse.FlowEnt.IUpdateController
  commentId: T:FriedSynapse.FlowEnt.IUpdateController
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.IUpdateController.html
  name: IUpdateController
  nameWithType: IUpdateController
  fullName: FriedSynapse.FlowEnt.IUpdateController
- uid: FriedSynapse.FlowEnt.AbstractAnimation.Controllable
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.Controllable
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Controllable
  name: Controllable
  nameWithType: AbstractAnimation.Controllable
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.Controllable
- uid: FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_UpdateType
  name: UpdateType
  nameWithType: AbstractAnimation.UpdateType
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
- uid: FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AutoStart
  name: AutoStart
  nameWithType: AbstractAnimation.AutoStart
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
- uid: FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_TimeScale
  name: TimeScale
  nameWithType: AbstractAnimation.TimeScale
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
- uid: FriedSynapse.FlowEnt.AbstractAnimation.PlayState
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.PlayState
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_PlayState
  name: PlayState
  nameWithType: AbstractAnimation.PlayState
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.PlayState
- uid: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  isExternal: true
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_AbstractAnimation__
  name: Conditional(Func<bool>, Action<AbstractAnimation>)
  nameWithType: AbstractAnimation.Conditional(Func<bool>, Action<AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func<bool>, System.Action<FriedSynapse.FlowEnt.AbstractAnimation>)
  nameWithType.vb: AbstractAnimation.Conditional(Func(Of Boolean), Action(Of AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func(Of Boolean), System.Action(Of FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: Conditional(Func(Of Boolean), Action(Of AbstractAnimation))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
    name: Conditional
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_AbstractAnimation__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
    name: Conditional
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_AbstractAnimation__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Overdraft
  name: Overdraft
  nameWithType: AbstractAnimation.Overdraft
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
- uid: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  isExternal: true
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AsAsync_System_Nullable_System_Threading_CancellationToken__
  name: AsAsync(CancellationToken?)
  nameWithType: AbstractAnimation.AsAsync(CancellationToken?)
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Threading.CancellationToken?)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
    name: AsAsync
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AsAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
    name: AsAsync
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AsAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: FriedSynapse.FlowEnt.AbstractUpdatable.Id
  commentId: P:FriedSynapse.FlowEnt.AbstractUpdatable.Id
  parent: FriedSynapse.FlowEnt.AbstractUpdatable
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_Id
  name: Id
  nameWithType: AbstractUpdatable.Id
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable.Id
- uid: FriedSynapse.FlowEnt.AbstractUpdatable.Name
  commentId: P:FriedSynapse.FlowEnt.AbstractUpdatable.Name
  parent: FriedSynapse.FlowEnt.AbstractUpdatable
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_Name
  name: Name
  nameWithType: AbstractUpdatable.Name
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable.Name
- uid: FriedSynapse.FlowEnt.AbstractUpdatable.ToString
  commentId: M:FriedSynapse.FlowEnt.AbstractUpdatable.ToString
  parent: FriedSynapse.FlowEnt.AbstractUpdatable
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_ToString
  name: ToString()
  nameWithType: AbstractUpdatable.ToString()
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable.ToString()
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable.ToString
    name: ToString
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable.ToString
    name: ToString
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_ToString
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.EchoOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  name: Echo<Flow>(Flow, EchoOptions)
  nameWithType: CommonExtensions.Echo<Flow>(Flow, EchoOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<FriedSynapse.FlowEnt.Flow>(FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.EchoOptions)
  nameWithType.vb: CommonExtensions.Echo(Of Flow)(Flow, EchoOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of FriedSynapse.FlowEnt.Flow)(FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.EchoOptions)
  name.vb: Echo(Of Flow)(Flow, EchoOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(System.Nullable{System.Single},System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  name: Echo<Flow>(Flow, float?, bool)
  nameWithType: CommonExtensions.Echo<Flow>(Flow, float?, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<FriedSynapse.FlowEnt.Flow>(FriedSynapse.FlowEnt.Flow, float?, bool)
  nameWithType.vb: CommonExtensions.Echo(Of Flow)(Flow, Single?, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of FriedSynapse.FlowEnt.Flow)(FriedSynapse.FlowEnt.Flow, Single?, Boolean)
  name.vb: Echo(Of Flow)(Flow, Single?, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Flow,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Flow,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Restart``1
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  name: Restart<Flow>(Flow)
  nameWithType: CommonExtensions.Restart<Flow>(Flow)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Restart<FriedSynapse.FlowEnt.Flow>(FriedSynapse.FlowEnt.Flow)
  nameWithType.vb: CommonExtensions.Restart(Of Flow)(Flow)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Restart(Of FriedSynapse.FlowEnt.Flow)(FriedSynapse.FlowEnt.Flow)
  name.vb: Restart(Of Flow)(Flow)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(FriedSynapse.FlowEnt.Flow)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(FriedSynapse.FlowEnt.Flow)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.TweenOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  name: Tween<Flow>(Flow, TweenOptions)
  nameWithType: CommonExtensions.Tween<Flow>(Flow, TweenOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<FriedSynapse.FlowEnt.Flow>(FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.TweenOptions)
  nameWithType.vb: CommonExtensions.Tween(Of Flow)(Flow, TweenOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of FriedSynapse.FlowEnt.Flow)(FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.TweenOptions)
  name.vb: Tween(Of Flow)(Flow, TweenOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(System.Single,System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  name: Tween<Flow>(Flow, float, bool)
  nameWithType: CommonExtensions.Tween<Flow>(Flow, float, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<FriedSynapse.FlowEnt.Flow>(FriedSynapse.FlowEnt.Flow, float, bool)
  nameWithType.vb: CommonExtensions.Tween(Of Flow)(Flow, Single, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of FriedSynapse.FlowEnt.Flow)(FriedSynapse.FlowEnt.Flow, Single, Boolean)
  name.vb: Tween(Of Flow)(Flow, Single, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Flow,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Flow,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.String,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  definition: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetFieldValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  name: GetFieldValue<T>(object, string, BindingFlags)
  nameWithType: ReflectionExtensions.GetFieldValue<T>(object, string, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue<T>(object, string, System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.GetFieldValue(Of T)(Object, String, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue(Of T)(Object, String, System.Reflection.BindingFlags)
  name.vb: GetFieldValue(Of T)(Object, String, BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetFieldValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetFieldValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.String,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  definition: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetPropertyValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  name: GetPropertyValue<T>(object, string, BindingFlags)
  nameWithType: ReflectionExtensions.GetPropertyValue<T>(object, string, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue<T>(object, string, System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.GetPropertyValue(Of T)(Object, String, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue(Of T)(Object, String, System.Reflection.BindingFlags)
  name.vb: GetPropertyValue(Of T)(Object, String, BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetPropertyValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetPropertyValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetPropertyValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetPropertyValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.String,System.Object[],System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  definition: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_InvokeMethod__2_System_Object_System_String_System_Object___System_Reflection_BindingFlags_
  name: InvokeMethod<TClass, TResult>(object, string, object[], BindingFlags)
  nameWithType: ReflectionExtensions.InvokeMethod<TClass, TResult>(object, string, object[], BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod<TClass, TResult>(object, string, object[], System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.InvokeMethod(Of TClass, TResult)(Object, String, Object(), BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod(Of TClass, TResult)(Object, String, Object(), System.Reflection.BindingFlags)
  name.vb: InvokeMethod(Of TClass, TResult)(Object, String, Object(), BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
    name: InvokeMethod
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_InvokeMethod__2_System_Object_System_String_System_Object___System_Reflection_BindingFlags_
  - name: <
  - name: TClass
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
    name: InvokeMethod
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_InvokeMethod__2_System_Object_System_String_System_Object___System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: TClass
  - name: ','
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: System.Object.FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.String,{T},System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  definition: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_SetFieldValue__1_System_Object_System_String___0_System_Reflection_BindingFlags_
  name: SetFieldValue<T>(object, string, T, BindingFlags)
  nameWithType: ReflectionExtensions.SetFieldValue<T>(object, string, T, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue<T>(object, string, T, System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.SetFieldValue(Of T)(Object, String, T, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue(Of T)(Object, String, T, System.Reflection.BindingFlags)
  name.vb: SetFieldValue(Of T)(Object, String, T, BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
    name: SetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_SetFieldValue__1_System_Object_System_String___0_System_Reflection_BindingFlags_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
    name: SetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_SetFieldValue__1_System_Object_System_String___0_System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FriedSynapse.FlowEnt.FastListItem`1
  commentId: T:FriedSynapse.FlowEnt.FastListItem`1
  href: FriedSynapse.FlowEnt.FastListItem-1.html
  name: FastListItem<T>
  nameWithType: FastListItem<T>
  fullName: FriedSynapse.FlowEnt.FastListItem<T>
  nameWithType.vb: FastListItem(Of T)
  fullName.vb: FriedSynapse.FlowEnt.FastListItem(Of T)
  name.vb: FastListItem(Of T)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  name: Echo<TItem>(TItem, EchoOptions)
  nameWithType: CommonExtensions.Echo<TItem>(TItem, EchoOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<TItem>(TItem, FriedSynapse.FlowEnt.EchoOptions)
  nameWithType.vb: CommonExtensions.Echo(Of TItem)(TItem, EchoOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of TItem)(TItem, FriedSynapse.FlowEnt.EchoOptions)
  name.vb: Echo(Of TItem)(TItem, EchoOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions
  commentId: T:FriedSynapse.FlowEnt.CommonExtensions
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.CommonExtensions.html
  name: CommonExtensions
  nameWithType: CommonExtensions
  fullName: FriedSynapse.FlowEnt.CommonExtensions
- uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  isExternal: true
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  name: Echo<TItem>(TItem, float?, bool)
  nameWithType: CommonExtensions.Echo<TItem>(TItem, float?, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<TItem>(TItem, float?, bool)
  nameWithType.vb: CommonExtensions.Echo(Of TItem)(TItem, Single?, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of TItem)(TItem, Single?, Boolean)
  name.vb: Echo(Of TItem)(TItem, Single?, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  name: Restart<TAnimation>(TAnimation)
  nameWithType: CommonExtensions.Restart<TAnimation>(TAnimation)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Restart<TAnimation>(TAnimation)
  nameWithType.vb: CommonExtensions.Restart(Of TAnimation)(TAnimation)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Restart(Of TAnimation)(TAnimation)
  name.vb: Restart(Of TAnimation)(TAnimation)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: <
  - name: TAnimation
  - name: '>'
  - name: (
  - name: TAnimation
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: TAnimation
  - name: )
  - name: (
  - name: TAnimation
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  name: Tween<TItem>(TItem, TweenOptions)
  nameWithType: CommonExtensions.Tween<TItem>(TItem, TweenOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<TItem>(TItem, FriedSynapse.FlowEnt.TweenOptions)
  nameWithType.vb: CommonExtensions.Tween(Of TItem)(TItem, TweenOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of TItem)(TItem, FriedSynapse.FlowEnt.TweenOptions)
  name.vb: Tween(Of TItem)(TItem, TweenOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  isExternal: true
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  name: Tween<TItem>(TItem, float, bool)
  nameWithType: CommonExtensions.Tween<TItem>(TItem, float, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<TItem>(TItem, float, bool)
  nameWithType.vb: CommonExtensions.Tween(Of TItem)(TItem, Single, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of TItem)(TItem, Single, Boolean)
  name.vb: Tween(Of TItem)(TItem, Single, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  isExternal: true
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetFieldValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  name: GetFieldValue<T>(object, string, BindingFlags)
  nameWithType: ReflectionExtensions.GetFieldValue<T>(object, string, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue<T>(object, string, System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.GetFieldValue(Of T)(Object, String, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue(Of T)(Object, String, System.Reflection.BindingFlags)
  name.vb: GetFieldValue(Of T)(Object, String, BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetFieldValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetFieldValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  commentId: T:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  parent: FriedSynapse.FlowEnt.Reflection
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  isExternal: true
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetPropertyValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  name: GetPropertyValue<T>(object, string, BindingFlags)
  nameWithType: ReflectionExtensions.GetPropertyValue<T>(object, string, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue<T>(object, string, System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.GetPropertyValue(Of T)(Object, String, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue(Of T)(Object, String, System.Reflection.BindingFlags)
  name.vb: GetPropertyValue(Of T)(Object, String, BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetPropertyValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetPropertyValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
    name: GetPropertyValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetPropertyValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  isExternal: true
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_InvokeMethod__2_System_Object_System_String_System_Object___System_Reflection_BindingFlags_
  name: InvokeMethod<TClass, TResult>(object, string, object[], BindingFlags)
  nameWithType: ReflectionExtensions.InvokeMethod<TClass, TResult>(object, string, object[], BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod<TClass, TResult>(object, string, object[], System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.InvokeMethod(Of TClass, TResult)(Object, String, Object(), BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod(Of TClass, TResult)(Object, String, Object(), System.Reflection.BindingFlags)
  name.vb: InvokeMethod(Of TClass, TResult)(Object, String, Object(), BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
    name: InvokeMethod
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_InvokeMethod__2_System_Object_System_String_System_Object___System_Reflection_BindingFlags_
  - name: <
  - name: TClass
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
    name: InvokeMethod
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_InvokeMethod__2_System_Object_System_String_System_Object___System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: TClass
  - name: ','
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  isExternal: true
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_SetFieldValue__1_System_Object_System_String___0_System_Reflection_BindingFlags_
  name: SetFieldValue<T>(object, string, T, BindingFlags)
  nameWithType: ReflectionExtensions.SetFieldValue<T>(object, string, T, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue<T>(object, string, T, System.Reflection.BindingFlags)
  nameWithType.vb: ReflectionExtensions.SetFieldValue(Of T)(Object, String, T, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue(Of T)(Object, String, T, System.Reflection.BindingFlags)
  name.vb: SetFieldValue(Of T)(Object, String, T, BindingFlags)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
    name: SetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_SetFieldValue__1_System_Object_System_String___0_System_Reflection_BindingFlags_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
    name: SetFieldValue
    href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_SetFieldValue__1_System_Object_System_String___0_System_Reflection_BindingFlags_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: )
- uid: FriedSynapse.FlowEnt.Reflection
  commentId: N:FriedSynapse.FlowEnt.Reflection
  href: FriedSynapse.html
  name: FriedSynapse.FlowEnt.Reflection
  nameWithType: FriedSynapse.FlowEnt.Reflection
  fullName: FriedSynapse.FlowEnt.Reflection
  spec.csharp:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  - name: .
  - uid: FriedSynapse.FlowEnt.Reflection
    name: Reflection
    href: FriedSynapse.FlowEnt.Reflection.html
  spec.vb:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  - name: .
  - uid: FriedSynapse.FlowEnt.Reflection
    name: Reflection
    href: FriedSynapse.FlowEnt.Reflection.html
- uid: FriedSynapse.FlowEnt.Flow.#ctor*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.#ctor
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow__ctor_FriedSynapse_FlowEnt_FlowOptions_
  name: Flow
  nameWithType: Flow.Flow
  fullName: FriedSynapse.FlowEnt.Flow.Flow
  nameWithType.vb: Flow.New
  fullName.vb: FriedSynapse.FlowEnt.Flow.New
  name.vb: New
- uid: FriedSynapse.FlowEnt.FlowOptions
  commentId: T:FriedSynapse.FlowEnt.FlowOptions
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.FlowOptions.html
  name: FlowOptions
  nameWithType: FlowOptions
  fullName: FriedSynapse.FlowEnt.FlowOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FriedSynapse.FlowEnt.AnimationException
  commentId: T:FriedSynapse.FlowEnt.AnimationException
  href: FriedSynapse.FlowEnt.AnimationException.html
  name: AnimationException
  nameWithType: AnimationException
  fullName: FriedSynapse.FlowEnt.AnimationException
- uid: FriedSynapse.FlowEnt.Flow.Start*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.Start
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_Start
  name: Start
  nameWithType: Flow.Start
  fullName: FriedSynapse.FlowEnt.Flow.Start
- uid: FriedSynapse.FlowEnt.Flow
  commentId: T:FriedSynapse.FlowEnt.Flow
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.Flow.html
  name: Flow
  nameWithType: Flow
  fullName: FriedSynapse.FlowEnt.Flow
- uid: FriedSynapse.FlowEnt.Flow.StartAsync*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.StartAsync
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_StartAsync_System_Nullable_System_Threading_CancellationToken__
  name: StartAsync
  nameWithType: Flow.StartAsync
  fullName: FriedSynapse.FlowEnt.Flow.StartAsync
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{FriedSynapse.FlowEnt.Flow}
  commentId: T:System.Threading.Tasks.Task{FriedSynapse.FlowEnt.Flow}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Flow>
  nameWithType: Task<Flow>
  fullName: System.Threading.Tasks.Task<FriedSynapse.FlowEnt.Flow>
  nameWithType.vb: Task(Of Flow)
  fullName.vb: System.Threading.Tasks.Task(Of FriedSynapse.FlowEnt.Flow)
  name.vb: Task(Of Flow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FriedSynapse.FlowEnt.Flow.Resume*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.Resume
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_Resume
  name: Resume
  nameWithType: Flow.Resume
  fullName: FriedSynapse.FlowEnt.Flow.Resume
- uid: FriedSynapse.FlowEnt.Flow.Pause*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.Pause
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_Pause
  name: Pause
  nameWithType: Flow.Pause
  fullName: FriedSynapse.FlowEnt.Flow.Pause
- uid: FriedSynapse.FlowEnt.Flow.Stop*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.Stop
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_Stop_System_Boolean_
  name: Stop
  nameWithType: Flow.Stop
  fullName: FriedSynapse.FlowEnt.Flow.Stop
- uid: FriedSynapse.FlowEnt.Flow.Reset*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.Reset
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_Reset
  name: Reset
  nameWithType: Flow.Reset
  fullName: FriedSynapse.FlowEnt.Flow.Reset
- uid: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
  commentId: M:FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_ResetInternal
  name: ResetInternal()
  nameWithType: AbstractAnimation.ResetInternal()
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal()
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
    name: ResetInternal
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_ResetInternal
  - name: (
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
    name: ResetInternal
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_ResetInternal
  - name: (
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.ResetInternal*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.ResetInternal
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_ResetInternal
  name: ResetInternal
  nameWithType: Flow.ResetInternal
  fullName: FriedSynapse.FlowEnt.Flow.ResetInternal
- uid: FriedSynapse.FlowEnt.Flow.Queue*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.Queue
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_Queue_FriedSynapse_FlowEnt_AbstractAnimation_
  name: Queue
  nameWithType: Flow.Queue
  fullName: FriedSynapse.FlowEnt.Flow.Queue
- uid: System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation}
  commentId: T:System.Func{FriedSynapse.FlowEnt.Tween,FriedSynapse.FlowEnt.AbstractAnimation}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Tween, AbstractAnimation>
  nameWithType: Func<Tween, AbstractAnimation>
  fullName: System.Func<FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation>
  nameWithType.vb: Func(Of Tween, AbstractAnimation)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.Tween, FriedSynapse.FlowEnt.AbstractAnimation)
  name.vb: Func(Of Tween, AbstractAnimation)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FriedSynapse.FlowEnt.Tween
    name: Tween
    href: FriedSynapse.FlowEnt.Tween.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Tween
    name: Tween
    href: FriedSynapse.FlowEnt.Tween.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation}
  commentId: T:System.Func{FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.AbstractAnimation}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Echo, AbstractAnimation>
  nameWithType: Func<Echo, AbstractAnimation>
  fullName: System.Func<FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation>
  nameWithType.vb: Func(Of Echo, AbstractAnimation)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.AbstractAnimation)
  name.vb: Func(Of Echo, AbstractAnimation)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: )
- uid: System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation}
  commentId: T:System.Func{FriedSynapse.FlowEnt.Flow,FriedSynapse.FlowEnt.AbstractAnimation}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Flow, AbstractAnimation>
  nameWithType: Func<Flow, AbstractAnimation>
  fullName: System.Func<FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation>
  nameWithType.vb: Func(Of Flow, AbstractAnimation)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.Flow, FriedSynapse.FlowEnt.AbstractAnimation)
  name.vb: Func(Of Flow, AbstractAnimation)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.QueueAwaiter*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.QueueAwaiter
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_QueueAwaiter_FriedSynapse_FlowEnt_AbstractFlowAwaiter_
  name: QueueAwaiter
  nameWithType: Flow.QueueAwaiter
  fullName: FriedSynapse.FlowEnt.Flow.QueueAwaiter
- uid: FriedSynapse.FlowEnt.AbstractFlowAwaiter
  commentId: T:FriedSynapse.FlowEnt.AbstractFlowAwaiter
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.AbstractFlowAwaiter.html
  name: AbstractFlowAwaiter
  nameWithType: AbstractFlowAwaiter
  fullName: FriedSynapse.FlowEnt.AbstractFlowAwaiter
- uid: FriedSynapse.FlowEnt.Flow.QueueDelay*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.QueueDelay
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_QueueDelay_System_Single_
  name: QueueDelay
  nameWithType: Flow.QueueDelay
  fullName: FriedSynapse.FlowEnt.Flow.QueueDelay
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: FriedSynapse.FlowEnt.Flow.QueueDeferred*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.QueueDeferred
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_QueueDeferred_System_Func_FriedSynapse_FlowEnt_AbstractAnimation__
  name: QueueDeferred
  nameWithType: Flow.QueueDeferred
  fullName: FriedSynapse.FlowEnt.Flow.QueueDeferred
- uid: System.Func{FriedSynapse.FlowEnt.AbstractAnimation}
  commentId: T:System.Func{FriedSynapse.FlowEnt.AbstractAnimation}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<AbstractAnimation>
  nameWithType: Func<AbstractAnimation>
  fullName: System.Func<FriedSynapse.FlowEnt.AbstractAnimation>
  nameWithType.vb: Func(Of AbstractAnimation)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.AbstractAnimation)
  name.vb: Func(Of AbstractAnimation)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.At*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.At
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_At_System_Single_FriedSynapse_FlowEnt_AbstractAnimation_
  name: At
  nameWithType: Flow.At
  fullName: FriedSynapse.FlowEnt.Flow.At
- uid: System.Collections.Generic.List{FriedSynapse.FlowEnt.AbstractAnimation}
  commentId: T:System.Collections.Generic.List{FriedSynapse.FlowEnt.AbstractAnimation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AbstractAnimation>
  nameWithType: List<AbstractAnimation>
  fullName: System.Collections.Generic.List<FriedSynapse.FlowEnt.AbstractAnimation>
  nameWithType.vb: List(Of AbstractAnimation)
  fullName.vb: System.Collections.Generic.List(Of FriedSynapse.FlowEnt.AbstractAnimation)
  name.vb: List(Of AbstractAnimation)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: FriedSynapse.FlowEnt.Flow.AtDeferred*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.AtDeferred
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_AtDeferred_System_Single_System_Func_FriedSynapse_FlowEnt_AbstractAnimation__
  name: AtDeferred
  nameWithType: Flow.AtDeferred
  fullName: FriedSynapse.FlowEnt.Flow.AtDeferred
- uid: FriedSynapse.FlowEnt.Flow.Conditional*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.Conditional
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_Flow__
  name: Conditional
  nameWithType: Flow.Conditional
  fullName: FriedSynapse.FlowEnt.Flow.Conditional
- uid: System.Action{FriedSynapse.FlowEnt.Flow}
  commentId: T:System.Action{FriedSynapse.FlowEnt.Flow}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Flow>
  nameWithType: Action<Flow>
  fullName: System.Action<FriedSynapse.FlowEnt.Flow>
  nameWithType.vb: Action(Of Flow)
  fullName.vb: System.Action(Of FriedSynapse.FlowEnt.Flow)
  name.vb: Action(Of Flow)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Flow
    name: Flow
    href: FriedSynapse.FlowEnt.Flow.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.SetOptions*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetOptions
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetOptions_FriedSynapse_FlowEnt_FlowOptions_
  name: SetOptions
  nameWithType: Flow.SetOptions
  fullName: FriedSynapse.FlowEnt.Flow.SetOptions
- uid: System.Func{FriedSynapse.FlowEnt.FlowOptions,FriedSynapse.FlowEnt.FlowOptions}
  commentId: T:System.Func{FriedSynapse.FlowEnt.FlowOptions,FriedSynapse.FlowEnt.FlowOptions}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<FlowOptions, FlowOptions>
  nameWithType: Func<FlowOptions, FlowOptions>
  fullName: System.Func<FriedSynapse.FlowEnt.FlowOptions, FriedSynapse.FlowEnt.FlowOptions>
  nameWithType.vb: Func(Of FlowOptions, FlowOptions)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.FlowOptions, FriedSynapse.FlowEnt.FlowOptions)
  name.vb: Func(Of FlowOptions, FlowOptions)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FriedSynapse.FlowEnt.FlowOptions
    name: FlowOptions
    href: FriedSynapse.FlowEnt.FlowOptions.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.FlowOptions
    name: FlowOptions
    href: FriedSynapse.FlowEnt.FlowOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.FlowOptions
    name: FlowOptions
    href: FriedSynapse.FlowEnt.FlowOptions.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.FlowOptions
    name: FlowOptions
    href: FriedSynapse.FlowEnt.FlowOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.SetName*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetName
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetName_System_String_
  name: SetName
  nameWithType: Flow.SetName
  fullName: FriedSynapse.FlowEnt.Flow.SetName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: FriedSynapse.FlowEnt.Flow.SetUpdateType*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetUpdateType
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetUpdateType_FriedSynapse_FlowEnt_UpdateType_
  name: SetUpdateType
  nameWithType: Flow.SetUpdateType
  fullName: FriedSynapse.FlowEnt.Flow.SetUpdateType
- uid: FriedSynapse.FlowEnt.UpdateType
  commentId: T:FriedSynapse.FlowEnt.UpdateType
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.UpdateType.html
  name: UpdateType
  nameWithType: UpdateType
  fullName: FriedSynapse.FlowEnt.UpdateType
- uid: FriedSynapse.FlowEnt.Flow.SetAutoStart*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetAutoStart
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetAutoStart_System_Boolean_
  name: SetAutoStart
  nameWithType: Flow.SetAutoStart
  fullName: FriedSynapse.FlowEnt.Flow.SetAutoStart
- uid: FriedSynapse.FlowEnt.Flow.SetSkipFrames*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetSkipFrames
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetSkipFrames_System_Int32_
  name: SetSkipFrames
  nameWithType: Flow.SetSkipFrames
  fullName: FriedSynapse.FlowEnt.Flow.SetSkipFrames
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: FriedSynapse.FlowEnt.Flow.SetDelay*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetDelay
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetDelay_System_Single_
  name: SetDelay
  nameWithType: Flow.SetDelay
  fullName: FriedSynapse.FlowEnt.Flow.SetDelay
- uid: FriedSynapse.FlowEnt.Flow.SetDelayUntil*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetDelayUntil
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetDelayUntil_System_Func_System_Boolean__
  name: SetDelayUntil
  nameWithType: Flow.SetDelayUntil
  fullName: FriedSynapse.FlowEnt.Flow.SetDelayUntil
- uid: FriedSynapse.FlowEnt.Flow.SetLoopCount*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetLoopCount
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetLoopCount_System_Nullable_System_Int32__
  name: SetLoopCount
  nameWithType: Flow.SetLoopCount
  fullName: FriedSynapse.FlowEnt.Flow.SetLoopCount
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: FriedSynapse.FlowEnt.Flow.SetTimeScale*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetTimeScale
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetTimeScale_System_Single_
  name: SetTimeScale
  nameWithType: Flow.SetTimeScale
  fullName: FriedSynapse.FlowEnt.Flow.SetTimeScale
- uid: FriedSynapse.FlowEnt.Flow.SetEvents*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.SetEvents
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_SetEvents_FriedSynapse_FlowEnt_FlowEvents_
  name: SetEvents
  nameWithType: Flow.SetEvents
  fullName: FriedSynapse.FlowEnt.Flow.SetEvents
- uid: FriedSynapse.FlowEnt.FlowEvents
  commentId: T:FriedSynapse.FlowEnt.FlowEvents
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.FlowEvents.html
  name: FlowEvents
  nameWithType: FlowEvents
  fullName: FriedSynapse.FlowEnt.FlowEvents
- uid: System.Func{FriedSynapse.FlowEnt.FlowEvents,FriedSynapse.FlowEnt.FlowEvents}
  commentId: T:System.Func{FriedSynapse.FlowEnt.FlowEvents,FriedSynapse.FlowEnt.FlowEvents}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<FlowEvents, FlowEvents>
  nameWithType: Func<FlowEvents, FlowEvents>
  fullName: System.Func<FriedSynapse.FlowEnt.FlowEvents, FriedSynapse.FlowEnt.FlowEvents>
  nameWithType.vb: Func(Of FlowEvents, FlowEvents)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.FlowEvents, FriedSynapse.FlowEnt.FlowEvents)
  name.vb: Func(Of FlowEvents, FlowEvents)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FriedSynapse.FlowEnt.FlowEvents
    name: FlowEvents
    href: FriedSynapse.FlowEnt.FlowEvents.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.FlowEvents
    name: FlowEvents
    href: FriedSynapse.FlowEnt.FlowEvents.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.FlowEvents
    name: FlowEvents
    href: FriedSynapse.FlowEnt.FlowEvents.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.FlowEvents
    name: FlowEvents
    href: FriedSynapse.FlowEnt.FlowEvents.html
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.OnStarting*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnStarting
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnStarting_System_Action_
  name: OnStarting
  nameWithType: Flow.OnStarting
  fullName: FriedSynapse.FlowEnt.Flow.OnStarting
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: FriedSynapse.FlowEnt.Flow.OnStarted*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnStarted
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnStarted_System_Action_
  name: OnStarted
  nameWithType: Flow.OnStarted
  fullName: FriedSynapse.FlowEnt.Flow.OnStarted
- uid: FriedSynapse.FlowEnt.Flow.OnUpdating*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnUpdating
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnUpdating_System_Action_System_Single__
  name: OnUpdating
  nameWithType: Flow.OnUpdating
  fullName: FriedSynapse.FlowEnt.Flow.OnUpdating
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<float>
  nameWithType: Action<float>
  fullName: System.Action<float>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.OnUpdated*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnUpdated
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnUpdated_System_Action_System_Single__
  name: OnUpdated
  nameWithType: Flow.OnUpdated
  fullName: FriedSynapse.FlowEnt.Flow.OnUpdated
- uid: FriedSynapse.FlowEnt.Flow.OnLoopStarted*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnLoopStarted
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnLoopStarted_System_Action_System_Nullable_System_Int32___
  name: OnLoopStarted
  nameWithType: Flow.OnLoopStarted
  fullName: FriedSynapse.FlowEnt.Flow.OnLoopStarted
- uid: System.Action{System.Nullable{System.Int32}}
  commentId: T:System.Action{System.Nullable{System.Int32}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<int?>
  nameWithType: Action<int?>
  fullName: System.Action<int?>
  nameWithType.vb: Action(Of Integer?)
  fullName.vb: System.Action(Of Integer?)
  name.vb: Action(Of Integer?)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: FriedSynapse.FlowEnt.Flow.OnLoopCompleted*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnLoopCompleted
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnLoopCompleted_System_Action_System_Nullable_System_Int32___
  name: OnLoopCompleted
  nameWithType: Flow.OnLoopCompleted
  fullName: FriedSynapse.FlowEnt.Flow.OnLoopCompleted
- uid: FriedSynapse.FlowEnt.Flow.OnCompleting*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnCompleting
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnCompleting_System_Action_
  name: OnCompleting
  nameWithType: Flow.OnCompleting
  fullName: FriedSynapse.FlowEnt.Flow.OnCompleting
- uid: FriedSynapse.FlowEnt.Flow.OnCompleted*
  commentId: Overload:FriedSynapse.FlowEnt.Flow.OnCompleted
  href: FriedSynapse.FlowEnt.Flow.html#FriedSynapse_FlowEnt_Flow_OnCompleted_System_Action_
  name: OnCompleted
  nameWithType: Flow.OnCompleted
  fullName: FriedSynapse.FlowEnt.Flow.OnCompleted
