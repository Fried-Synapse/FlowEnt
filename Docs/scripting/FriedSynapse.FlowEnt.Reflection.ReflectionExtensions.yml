### YamlMime:ManagedReference
items:
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  commentId: T:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  id: ReflectionExtensions
  parent: FriedSynapse.FlowEnt.Reflection
  children:
  - FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.DefaultBindingFlags
  - FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  - FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  - FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  - FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  langs:
  - csharp
  - vb
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  type: Class
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: ReflectionExtensions
    path: ../Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
    startLine: 4
  namespace: FriedSynapse.FlowEnt.Reflection
  syntax:
    content: public static class ReflectionExtensions
    content.vb: Public Module ReflectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.DefaultBindingFlags
  commentId: F:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.DefaultBindingFlags
  id: DefaultBindingFlags
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  langs:
  - csharp
  - vb
  name: DefaultBindingFlags
  nameWithType: ReflectionExtensions.DefaultBindingFlags
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.DefaultBindingFlags
  type: Field
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: DefaultBindingFlags
    path: ../Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
    startLine: 6
  namespace: FriedSynapse.FlowEnt.Reflection
  syntax:
    content: public const BindingFlags DefaultBindingFlags = Instance | Public | NonPublic
    return:
      type: System.Reflection.BindingFlags
    content.vb: Public Const DefaultBindingFlags As BindingFlags = Instance Or Public Or NonPublic
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  id: GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  langs:
  - csharp
  - vb
  name: GetFieldValue<T>(object, string, BindingFlags)
  nameWithType: ReflectionExtensions.GetFieldValue<T>(object, string, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue<T>(object, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: GetFieldValue
    path: ../Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
    startLine: 9
  namespace: FriedSynapse.FlowEnt.Reflection
  syntax:
    content: public static T GetFieldValue<T>(this object obj, string name, BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)
    parameters:
    - id: obj
      type: System.Object
    - id: name
      type: System.String
    - id: bindingFlags
      type: System.Reflection.BindingFlags
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetFieldValue(Of T)(obj As Object, name As String, bindingFlags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic) As T
  overload: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue*
  nameWithType.vb: ReflectionExtensions.GetFieldValue(Of T)(Object, String, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue(Of T)(Object, String, System.Reflection.BindingFlags)
  name.vb: GetFieldValue(Of T)(Object, String, BindingFlags)
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  id: SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  langs:
  - csharp
  - vb
  name: SetFieldValue<T>(object, string, T, BindingFlags)
  nameWithType: ReflectionExtensions.SetFieldValue<T>(object, string, T, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue<T>(object, string, T, System.Reflection.BindingFlags)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetFieldValue
    path: ../Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
    startLine: 12
  namespace: FriedSynapse.FlowEnt.Reflection
  syntax:
    content: public static void SetFieldValue<T>(this object obj, string name, T value, BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)
    parameters:
    - id: obj
      type: System.Object
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    - id: bindingFlags
      type: System.Reflection.BindingFlags
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetFieldValue(Of T)(obj As Object, name As String, value As T, bindingFlags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic)
  overload: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue*
  nameWithType.vb: ReflectionExtensions.SetFieldValue(Of T)(Object, String, T, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue(Of T)(Object, String, T, System.Reflection.BindingFlags)
  name.vb: SetFieldValue(Of T)(Object, String, T, BindingFlags)
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  id: GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyValue<T>(object, string, BindingFlags)
  nameWithType: ReflectionExtensions.GetPropertyValue<T>(object, string, BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue<T>(object, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: GetPropertyValue
    path: ../Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
    startLine: 16
  namespace: FriedSynapse.FlowEnt.Reflection
  syntax:
    content: public static T GetPropertyValue<T>(this object obj, string name, BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)
    parameters:
    - id: obj
      type: System.Object
    - id: name
      type: System.String
    - id: bindingFlags
      type: System.Reflection.BindingFlags
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetPropertyValue(Of T)(obj As Object, name As String, bindingFlags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic) As T
  overload: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue*
  nameWithType.vb: ReflectionExtensions.GetPropertyValue(Of T)(Object, String, BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue(Of T)(Object, String, System.Reflection.BindingFlags)
  name.vb: GetPropertyValue(Of T)(Object, String, BindingFlags)
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  commentId: M:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  id: InvokeMethod``2(System.Object,System.String,System.Object[],System.Reflection.BindingFlags)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions
  langs:
  - csharp
  - vb
  name: InvokeMethod<TClass, TResult>(object, string, object[], BindingFlags)
  nameWithType: ReflectionExtensions.InvokeMethod<TClass, TResult>(object, string, object[], BindingFlags)
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod<TClass, TResult>(object, string, object[], System.Reflection.BindingFlags)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: InvokeMethod
    path: ../Assets/FlowEnt/Scripts/Editor/Common/ReflectionExtensions.cs
    startLine: 20
  namespace: FriedSynapse.FlowEnt.Reflection
  syntax:
    content: public static TResult InvokeMethod<TClass, TResult>(this object obj, string name, object[] data = null, BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)
    parameters:
    - id: obj
      type: System.Object
    - id: name
      type: System.String
    - id: data
      type: System.Object[]
    - id: bindingFlags
      type: System.Reflection.BindingFlags
    typeParameters:
    - id: TClass
    - id: TResult
    return:
      type: '{TResult}'
    content.vb: Public Shared Function InvokeMethod(Of TClass, TResult)(obj As Object, name As String, data As Object() = Nothing, bindingFlags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic) As TResult
  overload: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod*
  nameWithType.vb: ReflectionExtensions.InvokeMethod(Of TClass, TResult)(Object, String, Object(), BindingFlags)
  fullName.vb: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod(Of TClass, TResult)(Object, String, Object(), System.Reflection.BindingFlags)
  name.vb: InvokeMethod(Of TClass, TResult)(Object, String, Object(), BindingFlags)
references:
- uid: FriedSynapse.FlowEnt.Reflection
  commentId: N:FriedSynapse.FlowEnt.Reflection
  href: FriedSynapse.html
  name: FriedSynapse.FlowEnt.Reflection
  nameWithType: FriedSynapse.FlowEnt.Reflection
  fullName: FriedSynapse.FlowEnt.Reflection
  spec.csharp:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  - name: .
  - uid: FriedSynapse.FlowEnt.Reflection
    name: Reflection
    href: FriedSynapse.FlowEnt.Reflection.html
  spec.vb:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  - name: .
  - uid: FriedSynapse.FlowEnt.Reflection
    name: Reflection
    href: FriedSynapse.FlowEnt.Reflection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.BindingFlags
  commentId: T:System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue*
  commentId: Overload:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetFieldValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  name: GetFieldValue
  nameWithType: ReflectionExtensions.GetFieldValue
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetFieldValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue*
  commentId: Overload:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_SetFieldValue__1_System_Object_System_String___0_System_Reflection_BindingFlags_
  name: SetFieldValue
  nameWithType: ReflectionExtensions.SetFieldValue
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.SetFieldValue
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue*
  commentId: Overload:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_GetPropertyValue__1_System_Object_System_String_System_Reflection_BindingFlags_
  name: GetPropertyValue
  nameWithType: ReflectionExtensions.GetPropertyValue
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.GetPropertyValue
- uid: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod*
  commentId: Overload:FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod
  href: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.html#FriedSynapse_FlowEnt_Reflection_ReflectionExtensions_InvokeMethod__2_System_Object_System_String_System_Object___System_Reflection_BindingFlags_
  name: InvokeMethod
  nameWithType: ReflectionExtensions.InvokeMethod
  fullName: FriedSynapse.FlowEnt.Reflection.ReflectionExtensions.InvokeMethod
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  commentId: '!:TResult'
  name: TResult
  nameWithType: TResult
  fullName: TResult
