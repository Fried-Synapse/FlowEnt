### YamlMime:ManagedReference
items:
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  commentId: T:FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  id: AudioSourceMotionExtensions
  parent: FriedSynapse.FlowEnt
  children:
  - FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  - FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  - FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  - FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  - FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  - FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: AudioSourceMotionExtensions
  nameWithType: AudioSourceMotionExtensions
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  type: Class
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: AudioSourceMotionExtensions
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
    startLine: 5
  namespace: FriedSynapse.FlowEnt
  syntax:
    content: public static class AudioSourceMotionExtensions
    content.vb: Public Module AudioSourceMotionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  commentId: M:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  id: Pitch(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  langs:
  - csharp
  - vb
  name: Pitch(TweenMotionProxy<AudioSource>, float)
  nameWithType: AudioSourceMotionExtensions.Pitch(TweenMotionProxy<AudioSource>, float)
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch(FriedSynapse.FlowEnt.TweenMotionProxy<AudioSource>, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Pitch
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
    startLine: 14
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Tween.AudioSources.PitchMotion" data-throw-if-not-resolved="false"></xref> to the tween.
  example: []
  syntax:
    content: public static TweenMotionProxy<AudioSource> Pitch(this TweenMotionProxy<AudioSource> proxy, float value)
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
      description: ''
    - id: value
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
    content.vb: Public Shared Function Pitch(proxy As TweenMotionProxy(Of AudioSource), value As Single) As TweenMotionProxy(Of AudioSource)
  overload: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch*
  nameWithType.vb: AudioSourceMotionExtensions.Pitch(TweenMotionProxy(Of AudioSource), Single)
  fullName.vb: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch(FriedSynapse.FlowEnt.TweenMotionProxy(Of AudioSource), Single)
  name.vb: Pitch(TweenMotionProxy(Of AudioSource), Single)
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  commentId: M:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  id: PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  langs:
  - csharp
  - vb
  name: PitchTo(TweenMotionProxy<AudioSource>, float)
  nameWithType: AudioSourceMotionExtensions.PitchTo(TweenMotionProxy<AudioSource>, float)
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy<AudioSource>, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: PitchTo
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
    startLine: 22
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Tween.AudioSources.PitchMotion" data-throw-if-not-resolved="false"></xref> to the tween.
  example: []
  syntax:
    content: public static TweenMotionProxy<AudioSource> PitchTo(this TweenMotionProxy<AudioSource> proxy, float to)
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
      description: ''
    - id: to
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
    content.vb: Public Shared Function PitchTo(proxy As TweenMotionProxy(Of AudioSource), [to] As Single) As TweenMotionProxy(Of AudioSource)
  overload: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo*
  nameWithType.vb: AudioSourceMotionExtensions.PitchTo(TweenMotionProxy(Of AudioSource), Single)
  fullName.vb: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy(Of AudioSource), Single)
  name.vb: PitchTo(TweenMotionProxy(Of AudioSource), Single)
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  commentId: M:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  id: PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  langs:
  - csharp
  - vb
  name: PitchTo(TweenMotionProxy<AudioSource>, float, float)
  nameWithType: AudioSourceMotionExtensions.PitchTo(TweenMotionProxy<AudioSource>, float, float)
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy<AudioSource>, float, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: PitchTo
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
    startLine: 31
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Tween.AudioSources.PitchMotion" data-throw-if-not-resolved="false"></xref> to the tween.
  example: []
  syntax:
    content: public static TweenMotionProxy<AudioSource> PitchTo(this TweenMotionProxy<AudioSource> proxy, float from, float to)
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
      description: ''
    - id: from
      type: System.Single
      description: ''
    - id: to
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
    content.vb: Public Shared Function PitchTo(proxy As TweenMotionProxy(Of AudioSource), from As Single, [to] As Single) As TweenMotionProxy(Of AudioSource)
  overload: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo*
  nameWithType.vb: AudioSourceMotionExtensions.PitchTo(TweenMotionProxy(Of AudioSource), Single, Single)
  fullName.vb: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo(FriedSynapse.FlowEnt.TweenMotionProxy(Of AudioSource), Single, Single)
  name.vb: PitchTo(TweenMotionProxy(Of AudioSource), Single, Single)
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  commentId: M:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  id: Volume(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  langs:
  - csharp
  - vb
  name: Volume(TweenMotionProxy<AudioSource>, float)
  nameWithType: AudioSourceMotionExtensions.Volume(TweenMotionProxy<AudioSource>, float)
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume(FriedSynapse.FlowEnt.TweenMotionProxy<AudioSource>, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Volume
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
    startLine: 44
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Tween.AudioSources.VolumeMotion" data-throw-if-not-resolved="false"></xref> to the tween.
  remarks: Calculated destination value (current value + <code class="paramref">value</code>) will be clamped between 0 and 1.
  example: []
  syntax:
    content: public static TweenMotionProxy<AudioSource> Volume(this TweenMotionProxy<AudioSource> proxy, float value)
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
      description: ''
    - id: value
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
    content.vb: Public Shared Function Volume(proxy As TweenMotionProxy(Of AudioSource), value As Single) As TweenMotionProxy(Of AudioSource)
  overload: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume*
  nameWithType.vb: AudioSourceMotionExtensions.Volume(TweenMotionProxy(Of AudioSource), Single)
  fullName.vb: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume(FriedSynapse.FlowEnt.TweenMotionProxy(Of AudioSource), Single)
  name.vb: Volume(TweenMotionProxy(Of AudioSource), Single)
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  commentId: M:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  id: VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  langs:
  - csharp
  - vb
  name: VolumeTo(TweenMotionProxy<AudioSource>, float)
  nameWithType: AudioSourceMotionExtensions.VolumeTo(TweenMotionProxy<AudioSource>, float)
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy<AudioSource>, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: VolumeTo
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
    startLine: 53
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Tween.AudioSources.VolumeMotion" data-throw-if-not-resolved="false"></xref> to the tween.
  remarks: <code class="paramref">to</code> value will be clamped between 0 and 1.
  example: []
  syntax:
    content: public static TweenMotionProxy<AudioSource> VolumeTo(this TweenMotionProxy<AudioSource> proxy, float to)
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
      description: ''
    - id: to
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
    content.vb: Public Shared Function VolumeTo(proxy As TweenMotionProxy(Of AudioSource), [to] As Single) As TweenMotionProxy(Of AudioSource)
  overload: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo*
  nameWithType.vb: AudioSourceMotionExtensions.VolumeTo(TweenMotionProxy(Of AudioSource), Single)
  fullName.vb: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy(Of AudioSource), Single)
  name.vb: VolumeTo(TweenMotionProxy(Of AudioSource), Single)
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  commentId: M:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  id: VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource},System.Single,System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.AudioSourceMotionExtensions
  langs:
  - csharp
  - vb
  name: VolumeTo(TweenMotionProxy<AudioSource>, float, float)
  nameWithType: AudioSourceMotionExtensions.VolumeTo(TweenMotionProxy<AudioSource>, float, float)
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy<AudioSource>, float, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: VolumeTo
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/AudioSourceMotionExtensions.cs
    startLine: 63
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Tween.AudioSources.VolumeMotion" data-throw-if-not-resolved="false"></xref> to the tween.
  remarks: <code class="paramref">from</code> and <code class="paramref">to</code> values will be clamped between 0 and 1.
  example: []
  syntax:
    content: public static TweenMotionProxy<AudioSource> VolumeTo(this TweenMotionProxy<AudioSource> proxy, float from, float to)
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
      description: ''
    - id: from
      type: System.Single
      description: ''
    - id: to
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
    content.vb: Public Shared Function VolumeTo(proxy As TweenMotionProxy(Of AudioSource), from As Single, [to] As Single) As TweenMotionProxy(Of AudioSource)
  overload: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo*
  nameWithType.vb: AudioSourceMotionExtensions.VolumeTo(TweenMotionProxy(Of AudioSource), Single, Single)
  fullName.vb: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo(FriedSynapse.FlowEnt.TweenMotionProxy(Of AudioSource), Single, Single)
  name.vb: VolumeTo(TweenMotionProxy(Of AudioSource), Single, Single)
references:
- uid: FriedSynapse.FlowEnt
  commentId: N:FriedSynapse.FlowEnt
  href: FriedSynapse.html
  name: FriedSynapse.FlowEnt
  nameWithType: FriedSynapse.FlowEnt
  fullName: FriedSynapse.FlowEnt
  spec.csharp:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  spec.vb:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FriedSynapse.FlowEnt.Motions.Tween.AudioSources.PitchMotion
  commentId: T:FriedSynapse.FlowEnt.Motions.Tween.AudioSources.PitchMotion
  href: FriedSynapse.FlowEnt.Motions.Tween.AudioSources.PitchMotion.html
  name: PitchMotion
  nameWithType: PitchMotion
  fullName: FriedSynapse.FlowEnt.Motions.Tween.AudioSources.PitchMotion
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch*
  commentId: Overload:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch
  href: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.html#FriedSynapse_FlowEnt_AudioSourceMotionExtensions_Pitch_FriedSynapse_FlowEnt_TweenMotionProxy_AudioSource__System_Single_
  name: Pitch
  nameWithType: AudioSourceMotionExtensions.Pitch
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Pitch
- uid: FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
  commentId: T:FriedSynapse.FlowEnt.TweenMotionProxy{AudioSource}
  parent: FriedSynapse.FlowEnt
  definition: FriedSynapse.FlowEnt.TweenMotionProxy`1
  href: FriedSynapse.FlowEnt.TweenMotionProxy-1.html
  name: TweenMotionProxy<AudioSource>
  nameWithType: TweenMotionProxy<AudioSource>
  fullName: FriedSynapse.FlowEnt.TweenMotionProxy<AudioSource>
  nameWithType.vb: TweenMotionProxy(Of AudioSource)
  fullName.vb: FriedSynapse.FlowEnt.TweenMotionProxy(Of AudioSource)
  name.vb: TweenMotionProxy(Of AudioSource)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.TweenMotionProxy`1
    name: TweenMotionProxy
    href: FriedSynapse.FlowEnt.TweenMotionProxy-1.html
  - name: <
  - uid: AudioSource
    name: AudioSource
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.TweenMotionProxy`1
    name: TweenMotionProxy
    href: FriedSynapse.FlowEnt.TweenMotionProxy-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: AudioSource
    name: AudioSource
    isExternal: true
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: FriedSynapse.FlowEnt.TweenMotionProxy`1
  commentId: T:FriedSynapse.FlowEnt.TweenMotionProxy`1
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.TweenMotionProxy-1.html
  name: TweenMotionProxy<TItem>
  nameWithType: TweenMotionProxy<TItem>
  fullName: FriedSynapse.FlowEnt.TweenMotionProxy<TItem>
  nameWithType.vb: TweenMotionProxy(Of TItem)
  fullName.vb: FriedSynapse.FlowEnt.TweenMotionProxy(Of TItem)
  name.vb: TweenMotionProxy(Of TItem)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.TweenMotionProxy`1
    name: TweenMotionProxy
    href: FriedSynapse.FlowEnt.TweenMotionProxy-1.html
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.TweenMotionProxy`1
    name: TweenMotionProxy
    href: FriedSynapse.FlowEnt.TweenMotionProxy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo*
  commentId: Overload:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo
  href: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.html#FriedSynapse_FlowEnt_AudioSourceMotionExtensions_PitchTo_FriedSynapse_FlowEnt_TweenMotionProxy_AudioSource__System_Single_
  name: PitchTo
  nameWithType: AudioSourceMotionExtensions.PitchTo
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.PitchTo
- uid: FriedSynapse.FlowEnt.Motions.Tween.AudioSources.VolumeMotion
  commentId: T:FriedSynapse.FlowEnt.Motions.Tween.AudioSources.VolumeMotion
  href: FriedSynapse.FlowEnt.Motions.Tween.AudioSources.VolumeMotion.html
  name: VolumeMotion
  nameWithType: VolumeMotion
  fullName: FriedSynapse.FlowEnt.Motions.Tween.AudioSources.VolumeMotion
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume*
  commentId: Overload:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume
  href: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.html#FriedSynapse_FlowEnt_AudioSourceMotionExtensions_Volume_FriedSynapse_FlowEnt_TweenMotionProxy_AudioSource__System_Single_
  name: Volume
  nameWithType: AudioSourceMotionExtensions.Volume
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.Volume
- uid: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo*
  commentId: Overload:FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo
  href: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.html#FriedSynapse_FlowEnt_AudioSourceMotionExtensions_VolumeTo_FriedSynapse_FlowEnt_TweenMotionProxy_AudioSource__System_Single_
  name: VolumeTo
  nameWithType: AudioSourceMotionExtensions.VolumeTo
  fullName: FriedSynapse.FlowEnt.AudioSourceMotionExtensions.VolumeTo
