### YamlMime:ManagedReference
items:
- uid: FriedSynapse.FlowEnt.Echo
  commentId: T:FriedSynapse.FlowEnt.Echo
  id: Echo
  parent: FriedSynapse.FlowEnt
  children:
  - FriedSynapse.FlowEnt.Echo.#ctor(FriedSynapse.FlowEnt.EchoOptions)
  - FriedSynapse.FlowEnt.Echo.#ctor(System.Nullable{System.Single},System.Boolean)
  - FriedSynapse.FlowEnt.Echo.Apply(FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[])
  - FriedSynapse.FlowEnt.Echo.Apply(System.Collections.Generic.IEnumerable{FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion})
  - FriedSynapse.FlowEnt.Echo.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Echo})
  - FriedSynapse.FlowEnt.Echo.ForAll``1(System.Collections.Generic.IEnumerable{``0})
  - FriedSynapse.FlowEnt.Echo.For``1(``0)
  - FriedSynapse.FlowEnt.Echo.For``1(``0[])
  - FriedSynapse.FlowEnt.Echo.OnCompleted(System.Action)
  - FriedSynapse.FlowEnt.Echo.OnCompleting(System.Action)
  - FriedSynapse.FlowEnt.Echo.OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  - FriedSynapse.FlowEnt.Echo.OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  - FriedSynapse.FlowEnt.Echo.OnStarted(System.Action)
  - FriedSynapse.FlowEnt.Echo.OnStarting(System.Action)
  - FriedSynapse.FlowEnt.Echo.OnUpdated(System.Action{System.Single})
  - FriedSynapse.FlowEnt.Echo.OnUpdating(System.Action{System.Single})
  - FriedSynapse.FlowEnt.Echo.Pause
  - FriedSynapse.FlowEnt.Echo.Reset
  - FriedSynapse.FlowEnt.Echo.ResetInternal
  - FriedSynapse.FlowEnt.Echo.Resume
  - FriedSynapse.FlowEnt.Echo.SetAutoStart(System.Boolean)
  - FriedSynapse.FlowEnt.Echo.SetDelay(System.Single)
  - FriedSynapse.FlowEnt.Echo.SetDelayUntil(System.Func{System.Boolean})
  - FriedSynapse.FlowEnt.Echo.SetEvents(FriedSynapse.FlowEnt.EchoEvents)
  - FriedSynapse.FlowEnt.Echo.SetEvents(System.Func{FriedSynapse.FlowEnt.EchoEvents,FriedSynapse.FlowEnt.EchoEvents})
  - FriedSynapse.FlowEnt.Echo.SetLoopCount(System.Nullable{System.Int32})
  - FriedSynapse.FlowEnt.Echo.SetName(System.String)
  - FriedSynapse.FlowEnt.Echo.SetOptions(FriedSynapse.FlowEnt.EchoOptions)
  - FriedSynapse.FlowEnt.Echo.SetOptions(System.Func{FriedSynapse.FlowEnt.EchoOptions,FriedSynapse.FlowEnt.EchoOptions})
  - FriedSynapse.FlowEnt.Echo.SetSkipFrames(System.Int32)
  - FriedSynapse.FlowEnt.Echo.SetStopCondition(System.Func{System.Single,System.Boolean})
  - FriedSynapse.FlowEnt.Echo.SetTimeScale(System.Single)
  - FriedSynapse.FlowEnt.Echo.SetTimeout(System.Nullable{System.Single})
  - FriedSynapse.FlowEnt.Echo.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  - FriedSynapse.FlowEnt.Echo.Start
  - FriedSynapse.FlowEnt.Echo.StartAsync(System.Nullable{System.Threading.CancellationToken})
  - FriedSynapse.FlowEnt.Echo.Stop(System.Boolean)
  - FriedSynapse.FlowEnt.Echo.StopCondition
  - FriedSynapse.FlowEnt.Echo.Timeout
  langs:
  - csharp
  - vb
  name: Echo
  nameWithType: Echo
  fullName: FriedSynapse.FlowEnt.Echo
  type: Class
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Echo
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 13
  namespace: FriedSynapse.FlowEnt
  summary: >-
    An echo is a simple update loop that provides a delta time and other settings for custom animation

    For more information please go to https://flowent.friedsynapse.com/echo
  example: []
  syntax:
    content: 'public sealed class Echo : AbstractAnimation, IControllable'
    content.vb: Public NotInheritable Class Echo Inherits AbstractAnimation Implements IControllable
  inheritance:
  - System.Object
  - FriedSynapse.FlowEnt.FastListItem{FriedSynapse.FlowEnt.AbstractUpdatable}
  - FriedSynapse.FlowEnt.AbstractUpdatable
  - FriedSynapse.FlowEnt.AbstractAnimation
  implements:
  - FriedSynapse.FlowEnt.IControllable
  inheritedMembers:
  - FriedSynapse.FlowEnt.AbstractAnimation.Controllable
  - FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
  - FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
  - FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
  - FriedSynapse.FlowEnt.AbstractAnimation.PlayState
  - FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
  - FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
  - FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
  - FriedSynapse.FlowEnt.AbstractUpdatable.Id
  - FriedSynapse.FlowEnt.AbstractUpdatable.Name
  - FriedSynapse.FlowEnt.AbstractUpdatable.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Debug(System.String)
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.EchoOptions)
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(System.Nullable{System.Single},System.Boolean)
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Restart``1
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.TweenOptions)
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(System.Single,System.Boolean)
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.Button(System.String,System.Action{System.Single})
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(System.String,System.Action{System.Single})
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(System.String,System.Action{System.Single})
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.Key(KeyCode,System.Action{System.Single})
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(KeyCode,System.Action{System.Single})
  - FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(KeyCode,System.Action{System.Single})
- uid: FriedSynapse.FlowEnt.Echo.SetEvents(FriedSynapse.FlowEnt.EchoEvents)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetEvents(FriedSynapse.FlowEnt.EchoEvents)
  id: SetEvents(FriedSynapse.FlowEnt.EchoEvents)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetEvents(EchoEvents)
  nameWithType: Echo.SetEvents(EchoEvents)
  fullName: FriedSynapse.FlowEnt.Echo.SetEvents(FriedSynapse.FlowEnt.EchoEvents)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetEvents
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 10
  namespace: FriedSynapse.FlowEnt
  summary: Sets all the events for this echo.
  example: []
  syntax:
    content: public Echo SetEvents(EchoEvents events)
    parameters:
    - id: events
      type: FriedSynapse.FlowEnt.EchoEvents
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetEvents(events As EchoEvents) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetEvents*
- uid: FriedSynapse.FlowEnt.Echo.SetEvents(System.Func{FriedSynapse.FlowEnt.EchoEvents,FriedSynapse.FlowEnt.EchoEvents})
  commentId: M:FriedSynapse.FlowEnt.Echo.SetEvents(System.Func{FriedSynapse.FlowEnt.EchoEvents,FriedSynapse.FlowEnt.EchoEvents})
  id: SetEvents(System.Func{FriedSynapse.FlowEnt.EchoEvents,FriedSynapse.FlowEnt.EchoEvents})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetEvents(Func<EchoEvents, EchoEvents>)
  nameWithType: Echo.SetEvents(Func<EchoEvents, EchoEvents>)
  fullName: FriedSynapse.FlowEnt.Echo.SetEvents(System.Func<FriedSynapse.FlowEnt.EchoEvents, FriedSynapse.FlowEnt.EchoEvents>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetEvents
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 20
  namespace: FriedSynapse.FlowEnt
  summary: Creates a builder for events and then sets all the events for this echo.
  example: []
  syntax:
    content: public Echo SetEvents(Func<EchoEvents, EchoEvents> eventsBuilder)
    parameters:
    - id: eventsBuilder
      type: System.Func{FriedSynapse.FlowEnt.EchoEvents,FriedSynapse.FlowEnt.EchoEvents}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetEvents(eventsBuilder As Func(Of EchoEvents, EchoEvents)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetEvents*
  nameWithType.vb: Echo.SetEvents(Func(Of EchoEvents, EchoEvents))
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetEvents(System.Func(Of FriedSynapse.FlowEnt.EchoEvents, FriedSynapse.FlowEnt.EchoEvents))
  name.vb: SetEvents(Func(Of EchoEvents, EchoEvents))
- uid: FriedSynapse.FlowEnt.Echo.OnStarting(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Echo.OnStarting(System.Action)
  id: OnStarting(System.Action)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnStarting(Action)
  nameWithType: Echo.OnStarting(Action)
  fullName: FriedSynapse.FlowEnt.Echo.OnStarting(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnStarting
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 25
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation is starting.
  example: []
  syntax:
    content: public Echo OnStarting(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnStarting(callback As Action) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnStarting*
- uid: FriedSynapse.FlowEnt.Echo.OnStarted(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Echo.OnStarted(System.Action)
  id: OnStarted(System.Action)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnStarted(Action)
  nameWithType: Echo.OnStarted(Action)
  fullName: FriedSynapse.FlowEnt.Echo.OnStarted(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnStarted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 33
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation has started.
  example: []
  syntax:
    content: public Echo OnStarted(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnStarted(callback As Action) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnStarted*
- uid: FriedSynapse.FlowEnt.Echo.OnUpdating(System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.Echo.OnUpdating(System.Action{System.Single})
  id: OnUpdating(System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnUpdating(Action<float>)
  nameWithType: Echo.OnUpdating(Action<float>)
  fullName: FriedSynapse.FlowEnt.Echo.OnUpdating(System.Action<float>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnUpdating
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 41
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation is updating.
  example: []
  syntax:
    content: public Echo OnUpdating(Action<float> callback)
    parameters:
    - id: callback
      type: System.Action{System.Single}
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnUpdating(callback As Action(Of Single)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnUpdating*
  nameWithType.vb: Echo.OnUpdating(Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.Echo.OnUpdating(System.Action(Of Single))
  name.vb: OnUpdating(Action(Of Single))
- uid: FriedSynapse.FlowEnt.Echo.OnUpdated(System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.Echo.OnUpdated(System.Action{System.Single})
  id: OnUpdated(System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnUpdated(Action<float>)
  nameWithType: Echo.OnUpdated(Action<float>)
  fullName: FriedSynapse.FlowEnt.Echo.OnUpdated(System.Action<float>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnUpdated
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 49
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation has updated.
  example: []
  syntax:
    content: public Echo OnUpdated(Action<float> callback)
    parameters:
    - id: callback
      type: System.Action{System.Single}
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnUpdated(callback As Action(Of Single)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnUpdated*
  nameWithType.vb: Echo.OnUpdated(Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.Echo.OnUpdated(System.Action(Of Single))
  name.vb: OnUpdated(Action(Of Single))
- uid: FriedSynapse.FlowEnt.Echo.OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  commentId: M:FriedSynapse.FlowEnt.Echo.OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  id: OnLoopStarted(System.Action{System.Nullable{System.Int32}})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnLoopStarted(Action<int?>)
  nameWithType: Echo.OnLoopStarted(Action<int?>)
  fullName: FriedSynapse.FlowEnt.Echo.OnLoopStarted(System.Action<int?>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnLoopStarted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 57
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation loop has started.
  example: []
  syntax:
    content: public Echo OnLoopStarted(Action<int?> callback)
    parameters:
    - id: callback
      type: System.Action{System.Nullable{System.Int32}}
      description: The event. The parameter represents the number of loops left. If there are infinite loops it'll send a null param.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnLoopStarted(callback As Action(Of Integer?)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnLoopStarted*
  nameWithType.vb: Echo.OnLoopStarted(Action(Of Integer?))
  fullName.vb: FriedSynapse.FlowEnt.Echo.OnLoopStarted(System.Action(Of Integer?))
  name.vb: OnLoopStarted(Action(Of Integer?))
- uid: FriedSynapse.FlowEnt.Echo.OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  commentId: M:FriedSynapse.FlowEnt.Echo.OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  id: OnLoopCompleted(System.Action{System.Nullable{System.Int32}})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnLoopCompleted(Action<int?>)
  nameWithType: Echo.OnLoopCompleted(Action<int?>)
  fullName: FriedSynapse.FlowEnt.Echo.OnLoopCompleted(System.Action<int?>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnLoopCompleted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 65
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation loop has completed.
  example: []
  syntax:
    content: public Echo OnLoopCompleted(Action<int?> callback)
    parameters:
    - id: callback
      type: System.Action{System.Nullable{System.Int32}}
      description: The event. The parameter represents the number of loops left. If there are infinite loops it'll send a null param.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnLoopCompleted(callback As Action(Of Integer?)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnLoopCompleted*
  nameWithType.vb: Echo.OnLoopCompleted(Action(Of Integer?))
  fullName.vb: FriedSynapse.FlowEnt.Echo.OnLoopCompleted(System.Action(Of Integer?))
  name.vb: OnLoopCompleted(Action(Of Integer?))
- uid: FriedSynapse.FlowEnt.Echo.OnCompleting(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Echo.OnCompleting(System.Action)
  id: OnCompleting(System.Action)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnCompleting(Action)
  nameWithType: Echo.OnCompleting(Action)
  fullName: FriedSynapse.FlowEnt.Echo.OnCompleting(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnCompleting
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 73
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation is completing.
  example: []
  syntax:
    content: public Echo OnCompleting(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnCompleting(callback As Action) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnCompleting*
- uid: FriedSynapse.FlowEnt.Echo.OnCompleted(System.Action)
  commentId: M:FriedSynapse.FlowEnt.Echo.OnCompleted(System.Action)
  id: OnCompleted(System.Action)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: OnCompleted(Action)
  nameWithType: Echo.OnCompleted(Action)
  fullName: FriedSynapse.FlowEnt.Echo.OnCompleted(System.Action)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: OnCompleted
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Events.cs
    startLine: 81
  namespace: FriedSynapse.FlowEnt
  summary: Adds an event called when the animation has completed.
  example: []
  syntax:
    content: public Echo OnCompleted(Action callback)
    parameters:
    - id: callback
      type: System.Action
      description: The event.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function OnCompleted(callback As Action) As Echo
  overload: FriedSynapse.FlowEnt.Echo.OnCompleted*
- uid: FriedSynapse.FlowEnt.Echo.Timeout
  commentId: P:FriedSynapse.FlowEnt.Echo.Timeout
  id: Timeout
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: Echo.Timeout
  fullName: FriedSynapse.FlowEnt.Echo.Timeout
  type: Property
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Timeout
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 7
  namespace: FriedSynapse.FlowEnt
  syntax:
    content: public float? Timeout { get; }
    parameters: []
    return:
      type: System.Nullable{System.Single}
    content.vb: Public ReadOnly Property Timeout As Single?
  overload: FriedSynapse.FlowEnt.Echo.Timeout*
- uid: FriedSynapse.FlowEnt.Echo.StopCondition
  commentId: P:FriedSynapse.FlowEnt.Echo.StopCondition
  id: StopCondition
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: StopCondition
  nameWithType: Echo.StopCondition
  fullName: FriedSynapse.FlowEnt.Echo.StopCondition
  type: Property
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: StopCondition
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 9
  namespace: FriedSynapse.FlowEnt
  syntax:
    content: public Func<float, bool> StopCondition { get; }
    parameters: []
    return:
      type: System.Func{System.Single,System.Boolean}
    content.vb: Public ReadOnly Property StopCondition As Func(Of Single, Boolean)
  overload: FriedSynapse.FlowEnt.Echo.StopCondition*
- uid: FriedSynapse.FlowEnt.Echo.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Echo})
  commentId: M:FriedSynapse.FlowEnt.Echo.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Echo})
  id: Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.Echo})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Conditional(Func<bool>, Action<Echo>)
  nameWithType: Echo.Conditional(Func<bool>, Action<Echo>)
  fullName: FriedSynapse.FlowEnt.Echo.Conditional(System.Func<bool>, System.Action<FriedSynapse.FlowEnt.Echo>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Conditional
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 13
  namespace: FriedSynapse.FlowEnt
  summary: Executes the <code class="paramref">onConditionTrue</code> if <code class="paramref">condition</code> returns true.
  example: []
  syntax:
    content: public Echo Conditional(Func<bool> condition, Action<Echo> onConditionTrue)
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: The condition.
    - id: onConditionTrue
      type: System.Action{FriedSynapse.FlowEnt.Echo}
      description: The callback.
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function Conditional(condition As Func(Of Boolean), onConditionTrue As Action(Of Echo)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.Conditional*
  nameWithType.vb: Echo.Conditional(Func(Of Boolean), Action(Of Echo))
  fullName.vb: FriedSynapse.FlowEnt.Echo.Conditional(System.Func(Of Boolean), System.Action(Of FriedSynapse.FlowEnt.Echo))
  name.vb: Conditional(Func(Of Boolean), Action(Of Echo))
- uid: FriedSynapse.FlowEnt.Echo.SetOptions(FriedSynapse.FlowEnt.EchoOptions)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetOptions(FriedSynapse.FlowEnt.EchoOptions)
  id: SetOptions(FriedSynapse.FlowEnt.EchoOptions)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetOptions(EchoOptions)
  nameWithType: Echo.SetOptions(EchoOptions)
  fullName: FriedSynapse.FlowEnt.Echo.SetOptions(FriedSynapse.FlowEnt.EchoOptions)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetOptions
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 20
  namespace: FriedSynapse.FlowEnt
  summary: Sets all the options for this tween.
  example: []
  syntax:
    content: public Echo SetOptions(EchoOptions options)
    parameters:
    - id: options
      type: FriedSynapse.FlowEnt.EchoOptions
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetOptions(options As EchoOptions) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetOptions*
- uid: FriedSynapse.FlowEnt.Echo.SetOptions(System.Func{FriedSynapse.FlowEnt.EchoOptions,FriedSynapse.FlowEnt.EchoOptions})
  commentId: M:FriedSynapse.FlowEnt.Echo.SetOptions(System.Func{FriedSynapse.FlowEnt.EchoOptions,FriedSynapse.FlowEnt.EchoOptions})
  id: SetOptions(System.Func{FriedSynapse.FlowEnt.EchoOptions,FriedSynapse.FlowEnt.EchoOptions})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetOptions(Func<EchoOptions, EchoOptions>)
  nameWithType: Echo.SetOptions(Func<EchoOptions, EchoOptions>)
  fullName: FriedSynapse.FlowEnt.Echo.SetOptions(System.Func<FriedSynapse.FlowEnt.EchoOptions, FriedSynapse.FlowEnt.EchoOptions>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetOptions
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 32
  namespace: FriedSynapse.FlowEnt
  summary: Creates a builder for options and then sets all the options for this echo.
  example: []
  syntax:
    content: public Echo SetOptions(Func<EchoOptions, EchoOptions> optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: System.Func{FriedSynapse.FlowEnt.EchoOptions,FriedSynapse.FlowEnt.EchoOptions}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetOptions(optionsBuilder As Func(Of EchoOptions, EchoOptions)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetOptions*
  nameWithType.vb: Echo.SetOptions(Func(Of EchoOptions, EchoOptions))
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetOptions(System.Func(Of FriedSynapse.FlowEnt.EchoOptions, FriedSynapse.FlowEnt.EchoOptions))
  name.vb: SetOptions(Func(Of EchoOptions, EchoOptions))
- uid: FriedSynapse.FlowEnt.Echo.SetName(System.String)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetName(System.String)
  id: SetName(System.String)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetName(string)
  nameWithType: Echo.SetName(string)
  fullName: FriedSynapse.FlowEnt.Echo.SetName(string)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetName
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 37
  namespace: FriedSynapse.FlowEnt
  summary: Sets the name of the animation.
  example: []
  syntax:
    content: public Echo SetName(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetName(name As String) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetName*
  nameWithType.vb: Echo.SetName(String)
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetName(String)
  name.vb: SetName(String)
- uid: FriedSynapse.FlowEnt.Echo.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  id: SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetUpdateType(UpdateType)
  nameWithType: Echo.SetUpdateType(UpdateType)
  fullName: FriedSynapse.FlowEnt.Echo.SetUpdateType(FriedSynapse.FlowEnt.UpdateType)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetUpdateType
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 45
  namespace: FriedSynapse.FlowEnt
  summary: Sets the update type for the animation.
  example: []
  syntax:
    content: public Echo SetUpdateType(UpdateType updateType)
    parameters:
    - id: updateType
      type: FriedSynapse.FlowEnt.UpdateType
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetUpdateType(updateType As UpdateType) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetUpdateType*
- uid: FriedSynapse.FlowEnt.Echo.SetAutoStart(System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetAutoStart(System.Boolean)
  id: SetAutoStart(System.Boolean)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetAutoStart(bool)
  nameWithType: Echo.SetAutoStart(bool)
  fullName: FriedSynapse.FlowEnt.Echo.SetAutoStart(bool)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetAutoStart
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 53
  namespace: FriedSynapse.FlowEnt
  summary: Sets whether this animation should auto-start or not.
  remarks: Auto-start will be slower than a true-start. See more at https://flowent.friedsynapse.com/tips#h.s5cucrg5qyjc
  example: []
  syntax:
    content: public Echo SetAutoStart(bool autoStart)
    parameters:
    - id: autoStart
      type: System.Boolean
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetAutoStart(autoStart As Boolean) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetAutoStart*
  nameWithType.vb: Echo.SetAutoStart(Boolean)
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetAutoStart(Boolean)
  name.vb: SetAutoStart(Boolean)
- uid: FriedSynapse.FlowEnt.Echo.SetSkipFrames(System.Int32)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetSkipFrames(System.Int32)
  id: SetSkipFrames(System.Int32)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetSkipFrames(int)
  nameWithType: Echo.SetSkipFrames(int)
  fullName: FriedSynapse.FlowEnt.Echo.SetSkipFrames(int)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetSkipFrames
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 61
  namespace: FriedSynapse.FlowEnt
  summary: Sets the amount of frames you want to skip at when this animation is started.
  example: []
  syntax:
    content: public Echo SetSkipFrames(int frames)
    parameters:
    - id: frames
      type: System.Int32
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetSkipFrames(frames As Integer) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetSkipFrames*
  nameWithType.vb: Echo.SetSkipFrames(Integer)
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetSkipFrames(Integer)
  name.vb: SetSkipFrames(Integer)
- uid: FriedSynapse.FlowEnt.Echo.SetDelay(System.Single)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetDelay(System.Single)
  id: SetDelay(System.Single)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetDelay(float)
  nameWithType: Echo.SetDelay(float)
  fullName: FriedSynapse.FlowEnt.Echo.SetDelay(float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetDelay
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 69
  namespace: FriedSynapse.FlowEnt
  summary: Sets the amount of time in seconds that you want to delay when this animation is started.
  example: []
  syntax:
    content: public Echo SetDelay(float time)
    parameters:
    - id: time
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetDelay(time As Single) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetDelay*
  nameWithType.vb: Echo.SetDelay(Single)
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetDelay(Single)
  name.vb: SetDelay(Single)
- uid: FriedSynapse.FlowEnt.Echo.SetDelayUntil(System.Func{System.Boolean})
  commentId: M:FriedSynapse.FlowEnt.Echo.SetDelayUntil(System.Func{System.Boolean})
  id: SetDelayUntil(System.Func{System.Boolean})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetDelayUntil(Func<bool>)
  nameWithType: Echo.SetDelayUntil(Func<bool>)
  fullName: FriedSynapse.FlowEnt.Echo.SetDelayUntil(System.Func<bool>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetDelayUntil
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 77
  namespace: FriedSynapse.FlowEnt
  summary: Sets the callback that holds the starting of the animation.
  example: []
  syntax:
    content: public Echo SetDelayUntil(Func<bool> callback)
    parameters:
    - id: callback
      type: System.Func{System.Boolean}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetDelayUntil(callback As Func(Of Boolean)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetDelayUntil*
  nameWithType.vb: Echo.SetDelayUntil(Func(Of Boolean))
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetDelayUntil(System.Func(Of Boolean))
  name.vb: SetDelayUntil(Func(Of Boolean))
- uid: FriedSynapse.FlowEnt.Echo.SetLoopCount(System.Nullable{System.Int32})
  commentId: M:FriedSynapse.FlowEnt.Echo.SetLoopCount(System.Nullable{System.Int32})
  id: SetLoopCount(System.Nullable{System.Int32})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetLoopCount(int?)
  nameWithType: Echo.SetLoopCount(int?)
  fullName: FriedSynapse.FlowEnt.Echo.SetLoopCount(int?)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetLoopCount
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 85
  namespace: FriedSynapse.FlowEnt
  summary: Sets the amount of loops you want this animation to have. If you want infinite loops pass a null value.
  remarks: Flows only have reset loop types.
  example: []
  syntax:
    content: public Echo SetLoopCount(int? loopCount)
    parameters:
    - id: loopCount
      type: System.Nullable{System.Int32}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetLoopCount(loopCount As Integer?) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetLoopCount*
  nameWithType.vb: Echo.SetLoopCount(Integer?)
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetLoopCount(Integer?)
  name.vb: SetLoopCount(Integer?)
- uid: FriedSynapse.FlowEnt.Echo.SetTimeScale(System.Single)
  commentId: M:FriedSynapse.FlowEnt.Echo.SetTimeScale(System.Single)
  id: SetTimeScale(System.Single)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetTimeScale(float)
  nameWithType: Echo.SetTimeScale(float)
  fullName: FriedSynapse.FlowEnt.Echo.SetTimeScale(float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetTimeScale
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 93
  namespace: FriedSynapse.FlowEnt
  summary: Sets the time scale for the current animation.
  example: []
  syntax:
    content: public Echo SetTimeScale(float timeScale)
    parameters:
    - id: timeScale
      type: System.Single
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetTimeScale(timeScale As Single) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetTimeScale*
  nameWithType.vb: Echo.SetTimeScale(Single)
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetTimeScale(Single)
  name.vb: SetTimeScale(Single)
- uid: FriedSynapse.FlowEnt.Echo.SetTimeout(System.Nullable{System.Single})
  commentId: M:FriedSynapse.FlowEnt.Echo.SetTimeout(System.Nullable{System.Single})
  id: SetTimeout(System.Nullable{System.Single})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetTimeout(float?)
  nameWithType: Echo.SetTimeout(float?)
  fullName: FriedSynapse.FlowEnt.Echo.SetTimeout(float?)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetTimeout
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 101
  namespace: FriedSynapse.FlowEnt
  summary: Sets the amount of time in seconds that this echo will last.
  example: []
  syntax:
    content: public Echo SetTimeout(float? timeout)
    parameters:
    - id: timeout
      type: System.Nullable{System.Single}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetTimeout(timeout As Single?) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetTimeout*
  nameWithType.vb: Echo.SetTimeout(Single?)
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetTimeout(Single?)
  name.vb: SetTimeout(Single?)
- uid: FriedSynapse.FlowEnt.Echo.SetStopCondition(System.Func{System.Single,System.Boolean})
  commentId: M:FriedSynapse.FlowEnt.Echo.SetStopCondition(System.Func{System.Single,System.Boolean})
  id: SetStopCondition(System.Func{System.Single,System.Boolean})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: SetStopCondition(Func<float, bool>)
  nameWithType: Echo.SetStopCondition(Func<float, bool>)
  fullName: FriedSynapse.FlowEnt.Echo.SetStopCondition(System.Func<float, bool>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: SetStopCondition
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.Options.cs
    startLine: 117
  namespace: FriedSynapse.FlowEnt
  summary: Sets the condition that when true, it will stop the echo.
  example: []
  syntax:
    content: public Echo SetStopCondition(Func<float, bool> stopCondition)
    parameters:
    - id: stopCondition
      type: System.Func{System.Single,System.Boolean}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function SetStopCondition(stopCondition As Func(Of Single, Boolean)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.SetStopCondition*
  nameWithType.vb: Echo.SetStopCondition(Func(Of Single, Boolean))
  fullName.vb: FriedSynapse.FlowEnt.Echo.SetStopCondition(System.Func(Of Single, Boolean))
  name.vb: SetStopCondition(Func(Of Single, Boolean))
- uid: FriedSynapse.FlowEnt.Echo.#ctor(FriedSynapse.FlowEnt.EchoOptions)
  commentId: M:FriedSynapse.FlowEnt.Echo.#ctor(FriedSynapse.FlowEnt.EchoOptions)
  id: '#ctor(FriedSynapse.FlowEnt.EchoOptions)'
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Echo(EchoOptions)
  nameWithType: Echo.Echo(EchoOptions)
  fullName: FriedSynapse.FlowEnt.Echo.Echo(FriedSynapse.FlowEnt.EchoOptions)
  type: Constructor
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: .ctor
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 20
  namespace: FriedSynapse.FlowEnt
  summary: Creates a new echo using the options provided.
  example: []
  syntax:
    content: public Echo(EchoOptions options)
    parameters:
    - id: options
      type: FriedSynapse.FlowEnt.EchoOptions
      description: ''
    content.vb: Public Sub New(options As EchoOptions)
  overload: FriedSynapse.FlowEnt.Echo.#ctor*
  nameWithType.vb: Echo.New(EchoOptions)
  fullName.vb: FriedSynapse.FlowEnt.Echo.New(FriedSynapse.FlowEnt.EchoOptions)
  name.vb: New(EchoOptions)
- uid: FriedSynapse.FlowEnt.Echo.#ctor(System.Nullable{System.Single},System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.Echo.#ctor(System.Nullable{System.Single},System.Boolean)
  id: '#ctor(System.Nullable{System.Single},System.Boolean)'
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Echo(float?, bool)
  nameWithType: Echo.Echo(float?, bool)
  fullName: FriedSynapse.FlowEnt.Echo.Echo(float?, bool)
  type: Constructor
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: .ctor
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 30
  namespace: FriedSynapse.FlowEnt
  summary: Creates a new echo.
  example: []
  syntax:
    content: public Echo(float? timeout = null, bool autoStart = false)
    parameters:
    - id: timeout
      type: System.Nullable{System.Single}
      description: The amount of time for this echo in seconds.
    - id: autoStart
      type: System.Boolean
      description: Whether the echo should start automatically or not.
    content.vb: Public Sub New(timeout As Single? = Nothing, autoStart As Boolean = False)
  overload: FriedSynapse.FlowEnt.Echo.#ctor*
  nameWithType.vb: Echo.New(Single?, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.Echo.New(Single?, Boolean)
  name.vb: New(Single?, Boolean)
- uid: FriedSynapse.FlowEnt.Echo.Start
  commentId: M:FriedSynapse.FlowEnt.Echo.Start
  id: Start
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Echo.Start()
  fullName: FriedSynapse.FlowEnt.Echo.Start()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Start
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 64
  namespace: FriedSynapse.FlowEnt
  summary: Starts the animation.
  example: []
  syntax:
    content: public Echo Start()
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function Start() As Echo
  overload: FriedSynapse.FlowEnt.Echo.Start*
  exceptions:
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the echo has already started.
- uid: FriedSynapse.FlowEnt.Echo.StartAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:FriedSynapse.FlowEnt.Echo.StartAsync(System.Nullable{System.Threading.CancellationToken})
  id: StartAsync(System.Nullable{System.Threading.CancellationToken})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: StartAsync(CancellationToken?)
  nameWithType: Echo.StartAsync(CancellationToken?)
  fullName: FriedSynapse.FlowEnt.Echo.StartAsync(System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: StartAsync
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 73
  namespace: FriedSynapse.FlowEnt
  summary: Starts the animation async(you can await this till the animation finishes).
  example: []
  syntax:
    content: public Task<Echo> StartAsync(CancellationToken? token = null)
    parameters:
    - id: token
      type: System.Nullable{System.Threading.CancellationToken}
      description: The cancellation doesn't cancel the task, but rather terminates the animation. The task will be completed
    return:
      type: System.Threading.Tasks.Task{FriedSynapse.FlowEnt.Echo}
    content.vb: Public Function StartAsync(token As CancellationToken? = Nothing) As Task(Of Echo)
  overload: FriedSynapse.FlowEnt.Echo.StartAsync*
  exceptions:
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the echo has already started.
- uid: FriedSynapse.FlowEnt.Echo.Resume
  commentId: M:FriedSynapse.FlowEnt.Echo.Resume
  id: Resume
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: Echo.Resume()
  fullName: FriedSynapse.FlowEnt.Echo.Resume()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Resume
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 81
  namespace: FriedSynapse.FlowEnt
  summary: Resumes the animation.
  example: []
  syntax:
    content: public Echo Resume()
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function [Resume]() As Echo
  overload: FriedSynapse.FlowEnt.Echo.Resume*
- uid: FriedSynapse.FlowEnt.Echo.Pause
  commentId: M:FriedSynapse.FlowEnt.Echo.Pause
  id: Pause
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: Echo.Pause()
  fullName: FriedSynapse.FlowEnt.Echo.Pause()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Pause
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 89
  namespace: FriedSynapse.FlowEnt
  summary: Pauses the animation.
  example: []
  syntax:
    content: public Echo Pause()
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function Pause() As Echo
  overload: FriedSynapse.FlowEnt.Echo.Pause*
- uid: FriedSynapse.FlowEnt.Echo.Stop(System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.Echo.Stop(System.Boolean)
  id: Stop(System.Boolean)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Stop(bool)
  nameWithType: Echo.Stop(bool)
  fullName: FriedSynapse.FlowEnt.Echo.Stop(bool)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Stop
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 97
  namespace: FriedSynapse.FlowEnt
  summary: Stops the animation.
  example: []
  syntax:
    content: public Echo Stop(bool triggerOnCompleted = false)
    parameters:
    - id: triggerOnCompleted
      type: System.Boolean
      description: If set to true will trigger the "OnCompleted" event on the animation
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function [Stop](triggerOnCompleted As Boolean = False) As Echo
  overload: FriedSynapse.FlowEnt.Echo.Stop*
  nameWithType.vb: Echo.Stop(Boolean)
  fullName.vb: FriedSynapse.FlowEnt.Echo.Stop(Boolean)
  name.vb: Stop(Boolean)
- uid: FriedSynapse.FlowEnt.Echo.Reset
  commentId: M:FriedSynapse.FlowEnt.Echo.Reset
  id: Reset
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Echo.Reset()
  fullName: FriedSynapse.FlowEnt.Echo.Reset()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Reset
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 106
  namespace: FriedSynapse.FlowEnt
  summary: Resets the animation so in can be replayed.
  example: []
  syntax:
    content: public Echo Reset()
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function Reset() As Echo
  overload: FriedSynapse.FlowEnt.Echo.Reset*
  exceptions:
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the animation is not finished.
  - type: FriedSynapse.FlowEnt.AnimationException
    commentId: T:FriedSynapse.FlowEnt.AnimationException
    description: If the echo is not finished.
- uid: FriedSynapse.FlowEnt.Echo.ResetInternal
  commentId: M:FriedSynapse.FlowEnt.Echo.ResetInternal
  id: ResetInternal
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: ResetInternal()
  nameWithType: Echo.ResetInternal()
  fullName: FriedSynapse.FlowEnt.Echo.ResetInternal()
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: ResetInternal
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 220
  namespace: FriedSynapse.FlowEnt
  example: []
  syntax:
    content: protected override void ResetInternal()
    content.vb: Protected Overrides Sub ResetInternal()
  overridden: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
  overload: FriedSynapse.FlowEnt.Echo.ResetInternal*
- uid: FriedSynapse.FlowEnt.Echo.Apply(FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[])
  commentId: M:FriedSynapse.FlowEnt.Echo.Apply(FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[])
  id: Apply(FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[])
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Apply(params AbstractEchoMotion[])
  nameWithType: Echo.Apply(params AbstractEchoMotion[])
  fullName: FriedSynapse.FlowEnt.Echo.Apply(params FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[])
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Apply
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 234
  namespace: FriedSynapse.FlowEnt
  summary: Applies all the motions to the current echo.
  example: []
  syntax:
    content: public Echo Apply(params AbstractEchoMotion[] motions)
    parameters:
    - id: motions
      type: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[]
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function Apply(ParamArray motions As AbstractEchoMotion()) As Echo
  overload: FriedSynapse.FlowEnt.Echo.Apply*
  nameWithType.vb: Echo.Apply(ParamArray AbstractEchoMotion())
  fullName.vb: FriedSynapse.FlowEnt.Echo.Apply(ParamArray FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion())
  name.vb: Apply(ParamArray AbstractEchoMotion())
- uid: FriedSynapse.FlowEnt.Echo.Apply(System.Collections.Generic.IEnumerable{FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion})
  commentId: M:FriedSynapse.FlowEnt.Echo.Apply(System.Collections.Generic.IEnumerable{FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion})
  id: Apply(System.Collections.Generic.IEnumerable{FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: Apply(IEnumerable<AbstractEchoMotion>)
  nameWithType: Echo.Apply(IEnumerable<AbstractEchoMotion>)
  fullName: FriedSynapse.FlowEnt.Echo.Apply(System.Collections.Generic.IEnumerable<FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: Apply
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 243
  namespace: FriedSynapse.FlowEnt
  summary: Applies all the motions to the current echo.
  example: []
  syntax:
    content: public Echo Apply(IEnumerable<AbstractEchoMotion> motions)
    parameters:
    - id: motions
      type: System.Collections.Generic.IEnumerable{FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion}
      description: ''
    return:
      type: FriedSynapse.FlowEnt.Echo
    content.vb: Public Function Apply(motions As IEnumerable(Of AbstractEchoMotion)) As Echo
  overload: FriedSynapse.FlowEnt.Echo.Apply*
  nameWithType.vb: Echo.Apply(IEnumerable(Of AbstractEchoMotion))
  fullName.vb: FriedSynapse.FlowEnt.Echo.Apply(System.Collections.Generic.IEnumerable(Of FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion))
  name.vb: Apply(IEnumerable(Of AbstractEchoMotion))
- uid: FriedSynapse.FlowEnt.Echo.For``1(``0)
  commentId: M:FriedSynapse.FlowEnt.Echo.For``1(``0)
  id: For``1(``0)
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: For<TItem>(TItem)
  nameWithType: Echo.For<TItem>(TItem)
  fullName: FriedSynapse.FlowEnt.Echo.For<TItem>(TItem)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: For
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 254
  namespace: FriedSynapse.FlowEnt
  summary: Creates a scope for the object so you can add motions designed specifically for that object.
  example: []
  syntax:
    content: public EchoMotionProxy<TItem> For<TItem>(TItem element)
    parameters:
    - id: element
      type: '{TItem}'
      description: ''
    typeParameters:
    - id: TItem
      description: ''
    return:
      type: FriedSynapse.FlowEnt.EchoMotionProxy{{TItem}}
    content.vb: Public Function [For](Of TItem)(element As TItem) As EchoMotionProxy(Of TItem)
  overload: FriedSynapse.FlowEnt.Echo.For*
  nameWithType.vb: Echo.For(Of TItem)(TItem)
  fullName.vb: FriedSynapse.FlowEnt.Echo.For(Of TItem)(TItem)
  name.vb: For(Of TItem)(TItem)
- uid: FriedSynapse.FlowEnt.Echo.For``1(``0[])
  commentId: M:FriedSynapse.FlowEnt.Echo.For``1(``0[])
  id: For``1(``0[])
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: For<TItem>(params TItem[])
  nameWithType: Echo.For<TItem>(params TItem[])
  fullName: FriedSynapse.FlowEnt.Echo.For<TItem>(params TItem[])
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: For
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 264
  namespace: FriedSynapse.FlowEnt
  summary: Creates a scope for the object so you can add motions designed specifically for that array of objects.
  example: []
  syntax:
    content: public EchoMotionProxyArray<TItem> For<TItem>(params TItem[] elements)
    parameters:
    - id: elements
      type: '{TItem}[]'
      description: ''
    typeParameters:
    - id: TItem
      description: ''
    return:
      type: FriedSynapse.FlowEnt.EchoMotionProxyArray{{TItem}}
    content.vb: Public Function [For](Of TItem)(ParamArray elements As TItem()) As EchoMotionProxyArray(Of TItem)
  overload: FriedSynapse.FlowEnt.Echo.For*
  nameWithType.vb: Echo.For(Of TItem)(ParamArray TItem())
  fullName.vb: FriedSynapse.FlowEnt.Echo.For(Of TItem)(ParamArray TItem())
  name.vb: For(Of TItem)(ParamArray TItem())
- uid: FriedSynapse.FlowEnt.Echo.ForAll``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:FriedSynapse.FlowEnt.Echo.ForAll``1(System.Collections.Generic.IEnumerable{``0})
  id: ForAll``1(System.Collections.Generic.IEnumerable{``0})
  parent: FriedSynapse.FlowEnt.Echo
  langs:
  - csharp
  - vb
  name: ForAll<TItem>(IEnumerable<TItem>)
  nameWithType: Echo.ForAll<TItem>(IEnumerable<TItem>)
  fullName: FriedSynapse.FlowEnt.Echo.ForAll<TItem>(System.Collections.Generic.IEnumerable<TItem>)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: ForAll
    path: ../Assets/FlowEnt/Scripts/Runtime/Core/Echo/Echo.cs
    startLine: 274
  namespace: FriedSynapse.FlowEnt
  summary: Creates a scope for the object so you can add motions designed specifically for that enumeration of objects.
  example: []
  syntax:
    content: public EchoMotionProxyArray<TItem> ForAll<TItem>(IEnumerable<TItem> elements)
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{{TItem}}
      description: ''
    typeParameters:
    - id: TItem
      description: ''
    return:
      type: FriedSynapse.FlowEnt.EchoMotionProxyArray{{TItem}}
    content.vb: Public Function ForAll(Of TItem)(elements As IEnumerable(Of TItem)) As EchoMotionProxyArray(Of TItem)
  overload: FriedSynapse.FlowEnt.Echo.ForAll*
  nameWithType.vb: Echo.ForAll(Of TItem)(IEnumerable(Of TItem))
  fullName.vb: FriedSynapse.FlowEnt.Echo.ForAll(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem))
  name.vb: ForAll(Of TItem)(IEnumerable(Of TItem))
references:
- uid: FriedSynapse.FlowEnt
  commentId: N:FriedSynapse.FlowEnt
  href: FriedSynapse.html
  name: FriedSynapse.FlowEnt
  nameWithType: FriedSynapse.FlowEnt
  fullName: FriedSynapse.FlowEnt
  spec.csharp:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  spec.vb:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FriedSynapse.FlowEnt.FastListItem{FriedSynapse.FlowEnt.AbstractUpdatable}
  commentId: T:FriedSynapse.FlowEnt.FastListItem{FriedSynapse.FlowEnt.AbstractUpdatable}
  parent: FriedSynapse.FlowEnt
  definition: FriedSynapse.FlowEnt.FastListItem`1
  href: FriedSynapse.FlowEnt.FastListItem-1.html
  name: FastListItem<AbstractUpdatable>
  nameWithType: FastListItem<AbstractUpdatable>
  fullName: FriedSynapse.FlowEnt.FastListItem<FriedSynapse.FlowEnt.AbstractUpdatable>
  nameWithType.vb: FastListItem(Of AbstractUpdatable)
  fullName.vb: FriedSynapse.FlowEnt.FastListItem(Of FriedSynapse.FlowEnt.AbstractUpdatable)
  name.vb: FastListItem(Of AbstractUpdatable)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: <
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable
    name: AbstractUpdatable
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable
    name: AbstractUpdatable
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html
  - name: )
- uid: FriedSynapse.FlowEnt.AbstractUpdatable
  commentId: T:FriedSynapse.FlowEnt.AbstractUpdatable
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html
  name: AbstractUpdatable
  nameWithType: AbstractUpdatable
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable
- uid: FriedSynapse.FlowEnt.AbstractAnimation
  commentId: T:FriedSynapse.FlowEnt.AbstractAnimation
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.AbstractAnimation.html
  name: AbstractAnimation
  nameWithType: AbstractAnimation
  fullName: FriedSynapse.FlowEnt.AbstractAnimation
- uid: FriedSynapse.FlowEnt.IControllable
  commentId: T:FriedSynapse.FlowEnt.IControllable
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.IControllable.html
  name: IControllable
  nameWithType: IControllable
  fullName: FriedSynapse.FlowEnt.IControllable
- uid: FriedSynapse.FlowEnt.AbstractAnimation.Controllable
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.Controllable
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Controllable
  name: Controllable
  nameWithType: AbstractAnimation.Controllable
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.Controllable
- uid: FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_UpdateType
  name: UpdateType
  nameWithType: AbstractAnimation.UpdateType
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.UpdateType
- uid: FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AutoStart
  name: AutoStart
  nameWithType: AbstractAnimation.AutoStart
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.AutoStart
- uid: FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_TimeScale
  name: TimeScale
  nameWithType: AbstractAnimation.TimeScale
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.TimeScale
- uid: FriedSynapse.FlowEnt.AbstractAnimation.PlayState
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.PlayState
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_PlayState
  name: PlayState
  nameWithType: AbstractAnimation.PlayState
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.PlayState
- uid: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
  commentId: M:FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  isExternal: true
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_AbstractAnimation__
  name: Conditional(Func<bool>, Action<AbstractAnimation>)
  nameWithType: AbstractAnimation.Conditional(Func<bool>, Action<AbstractAnimation>)
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func<bool>, System.Action<FriedSynapse.FlowEnt.AbstractAnimation>)
  nameWithType.vb: AbstractAnimation.Conditional(Func(Of Boolean), Action(Of AbstractAnimation))
  fullName.vb: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func(Of Boolean), System.Action(Of FriedSynapse.FlowEnt.AbstractAnimation))
  name.vb: Conditional(Func(Of Boolean), Action(Of AbstractAnimation))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
    name: Conditional
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_AbstractAnimation__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.Conditional(System.Func{System.Boolean},System.Action{FriedSynapse.FlowEnt.AbstractAnimation})
    name: Conditional
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_AbstractAnimation__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.AbstractAnimation
    name: AbstractAnimation
    href: FriedSynapse.FlowEnt.AbstractAnimation.html
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
  commentId: P:FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_Overdraft
  name: Overdraft
  nameWithType: AbstractAnimation.Overdraft
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.Overdraft
- uid: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  isExternal: true
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AsAsync_System_Nullable_System_Threading_CancellationToken__
  name: AsAsync(CancellationToken?)
  nameWithType: AbstractAnimation.AsAsync(CancellationToken?)
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Threading.CancellationToken?)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
    name: AsAsync
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AsAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.AsAsync(System.Nullable{System.Threading.CancellationToken})
    name: AsAsync
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_AsAsync_System_Nullable_System_Threading_CancellationToken__
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: FriedSynapse.FlowEnt.AbstractUpdatable.Id
  commentId: P:FriedSynapse.FlowEnt.AbstractUpdatable.Id
  parent: FriedSynapse.FlowEnt.AbstractUpdatable
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_Id
  name: Id
  nameWithType: AbstractUpdatable.Id
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable.Id
- uid: FriedSynapse.FlowEnt.AbstractUpdatable.Name
  commentId: P:FriedSynapse.FlowEnt.AbstractUpdatable.Name
  parent: FriedSynapse.FlowEnt.AbstractUpdatable
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_Name
  name: Name
  nameWithType: AbstractUpdatable.Name
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable.Name
- uid: FriedSynapse.FlowEnt.AbstractUpdatable.ToString
  commentId: M:FriedSynapse.FlowEnt.AbstractUpdatable.ToString
  parent: FriedSynapse.FlowEnt.AbstractUpdatable
  href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_ToString
  name: ToString()
  nameWithType: AbstractUpdatable.ToString()
  fullName: FriedSynapse.FlowEnt.AbstractUpdatable.ToString()
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable.ToString
    name: ToString
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractUpdatable.ToString
    name: ToString
    href: FriedSynapse.FlowEnt.AbstractUpdatable.html#FriedSynapse_FlowEnt_AbstractUpdatable_ToString
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Debug(System.String)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Debug_FriedSynapse_FlowEnt_Echo_System_String_
  name: Debug(Echo, string)
  nameWithType: CommonExtensions.Debug(Echo, string)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo, string)
  nameWithType.vb: CommonExtensions.Debug(Echo, String)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo, String)
  name.vb: Debug(Echo, String)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
    name: Debug
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Debug_FriedSynapse_FlowEnt_Echo_System_String_
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
    name: Debug
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Debug_FriedSynapse_FlowEnt_Echo_System_String_
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.EchoOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  name: Echo<Echo>(Echo, EchoOptions)
  nameWithType: CommonExtensions.Echo<Echo>(Echo, EchoOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<FriedSynapse.FlowEnt.Echo>(FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.EchoOptions)
  nameWithType.vb: CommonExtensions.Echo(Of Echo)(Echo, EchoOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of FriedSynapse.FlowEnt.Echo)(FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.EchoOptions)
  name.vb: Echo(Of Echo)(Echo, EchoOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Echo``1(System.Nullable{System.Single},System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  name: Echo<Echo>(Echo, float?, bool)
  nameWithType: CommonExtensions.Echo<Echo>(Echo, float?, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<FriedSynapse.FlowEnt.Echo>(FriedSynapse.FlowEnt.Echo, float?, bool)
  nameWithType.vb: CommonExtensions.Echo(Of Echo)(Echo, Single?, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of FriedSynapse.FlowEnt.Echo)(FriedSynapse.FlowEnt.Echo, Single?, Boolean)
  name.vb: Echo(Of Echo)(Echo, Single?, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Echo,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(FriedSynapse.FlowEnt.Echo,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Restart``1
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  name: Restart<Echo>(Echo)
  nameWithType: CommonExtensions.Restart<Echo>(Echo)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Restart<FriedSynapse.FlowEnt.Echo>(FriedSynapse.FlowEnt.Echo)
  nameWithType.vb: CommonExtensions.Restart(Of Echo)(Echo)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Restart(Of FriedSynapse.FlowEnt.Echo)(FriedSynapse.FlowEnt.Echo)
  name.vb: Restart(Of Echo)(Echo)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(FriedSynapse.FlowEnt.Echo)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(FriedSynapse.FlowEnt.Echo)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.TweenOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  name: Tween<Echo>(Echo, TweenOptions)
  nameWithType: CommonExtensions.Tween<Echo>(Echo, TweenOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<FriedSynapse.FlowEnt.Echo>(FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.TweenOptions)
  nameWithType.vb: CommonExtensions.Tween(Of Echo)(Echo, TweenOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of FriedSynapse.FlowEnt.Echo)(FriedSynapse.FlowEnt.Echo, FriedSynapse.FlowEnt.TweenOptions)
  name.vb: Tween(Of Echo)(Echo, TweenOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Echo,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.CommonExtensions.Tween``1(System.Single,System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  parent: FriedSynapse.FlowEnt.CommonExtensions
  definition: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  name: Tween<Echo>(Echo, float, bool)
  nameWithType: CommonExtensions.Tween<Echo>(Echo, float, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<FriedSynapse.FlowEnt.Echo>(FriedSynapse.FlowEnt.Echo, float, bool)
  nameWithType.vb: CommonExtensions.Tween(Of Echo)(Echo, Single, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of FriedSynapse.FlowEnt.Echo)(FriedSynapse.FlowEnt.Echo, Single, Boolean)
  name.vb: Tween(Of Echo)(Echo, Single, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Echo,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: '>'
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(FriedSynapse.FlowEnt.Echo,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.Button(System.String,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.InputMotionExtensions
  definition: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Button_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  name: Button(Echo, string, Action<float>)
  nameWithType: InputMotionExtensions.Button(Echo, string, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo, string, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.Button(Echo, String, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo, String, System.Action(Of Single))
  name.vb: Button(Echo, String, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: Button
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Button_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: Button
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Button_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(System.String,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.InputMotionExtensions
  definition: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonDown_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  name: ButtonDown(Echo, string, Action<float>)
  nameWithType: InputMotionExtensions.ButtonDown(Echo, string, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo, string, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.ButtonDown(Echo, String, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo, String, System.Action(Of Single))
  name.vb: ButtonDown(Echo, String, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonDown_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonDown_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(System.String,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.InputMotionExtensions
  definition: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonUp_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  name: ButtonUp(Echo, string, Action<float>)
  nameWithType: InputMotionExtensions.ButtonUp(Echo, string, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo, string, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.ButtonUp(Echo, String, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo, String, System.Action(Of Single))
  name.vb: ButtonUp(Echo, String, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonUp_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonUp_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.Key(KeyCode,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.InputMotionExtensions
  definition: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Key_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  name: Key(Echo, KeyCode, Action<float>)
  nameWithType: InputMotionExtensions.Key(Echo, KeyCode, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.Key(Echo, KeyCode, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action(Of Single))
  name.vb: Key(Echo, KeyCode, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: Key
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Key_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: Key
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Key_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(KeyCode,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.InputMotionExtensions
  definition: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyDown_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  name: KeyDown(Echo, KeyCode, Action<float>)
  nameWithType: InputMotionExtensions.KeyDown(Echo, KeyCode, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.KeyDown(Echo, KeyCode, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action(Of Single))
  name.vb: KeyDown(Echo, KeyCode, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyDown_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyDown_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(KeyCode,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  parent: FriedSynapse.FlowEnt.InputMotionExtensions
  definition: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyUp_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  name: KeyUp(Echo, KeyCode, Action<float>)
  nameWithType: InputMotionExtensions.KeyUp(Echo, KeyCode, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.KeyUp(Echo, KeyCode, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action(Of Single))
  name.vb: KeyUp(Echo, KeyCode, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyUp_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyUp_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FriedSynapse.FlowEnt.FastListItem`1
  commentId: T:FriedSynapse.FlowEnt.FastListItem`1
  href: FriedSynapse.FlowEnt.FastListItem-1.html
  name: FastListItem<T>
  nameWithType: FastListItem<T>
  fullName: FriedSynapse.FlowEnt.FastListItem<T>
  nameWithType.vb: FastListItem(Of T)
  fullName.vb: FriedSynapse.FlowEnt.FastListItem(Of T)
  name.vb: FastListItem(Of T)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.FastListItem`1
    name: FastListItem
    href: FriedSynapse.FlowEnt.FastListItem-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
  isExternal: true
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Debug_FriedSynapse_FlowEnt_Echo_System_String_
  name: Debug(Echo, string)
  nameWithType: CommonExtensions.Debug(Echo, string)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo, string)
  nameWithType.vb: CommonExtensions.Debug(Echo, String)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo, String)
  name.vb: Debug(Echo, String)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
    name: Debug
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Debug_FriedSynapse_FlowEnt_Echo_System_String_
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Debug(FriedSynapse.FlowEnt.Echo,System.String)
    name: Debug
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Debug_FriedSynapse_FlowEnt_Echo_System_String_
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions
  commentId: T:FriedSynapse.FlowEnt.CommonExtensions
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.CommonExtensions.html
  name: CommonExtensions
  nameWithType: CommonExtensions
  fullName: FriedSynapse.FlowEnt.CommonExtensions
- uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  name: Echo<TItem>(TItem, EchoOptions)
  nameWithType: CommonExtensions.Echo<TItem>(TItem, EchoOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<TItem>(TItem, FriedSynapse.FlowEnt.EchoOptions)
  nameWithType.vb: CommonExtensions.Echo(Of TItem)(TItem, EchoOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of TItem)(TItem, FriedSynapse.FlowEnt.EchoOptions)
  name.vb: Echo(Of TItem)(TItem, EchoOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,FriedSynapse.FlowEnt.EchoOptions)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_FriedSynapse_FlowEnt_EchoOptions_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
  isExternal: true
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  name: Echo<TItem>(TItem, float?, bool)
  nameWithType: CommonExtensions.Echo<TItem>(TItem, float?, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Echo<TItem>(TItem, float?, bool)
  nameWithType.vb: CommonExtensions.Echo(Of TItem)(TItem, Single?, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Echo(Of TItem)(TItem, Single?, Boolean)
  name.vb: Echo(Of TItem)(TItem, Single?, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Echo``1(``0,System.Nullable{System.Single},System.Boolean)
    name: Echo
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Echo__1___0_System_Nullable_System_Single__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  name: Restart<TAnimation>(TAnimation)
  nameWithType: CommonExtensions.Restart<TAnimation>(TAnimation)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Restart<TAnimation>(TAnimation)
  nameWithType.vb: CommonExtensions.Restart(Of TAnimation)(TAnimation)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Restart(Of TAnimation)(TAnimation)
  name.vb: Restart(Of TAnimation)(TAnimation)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: <
  - name: TAnimation
  - name: '>'
  - name: (
  - name: TAnimation
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Restart``1(``0)
    name: Restart
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Restart__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: TAnimation
  - name: )
  - name: (
  - name: TAnimation
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  name: Tween<TItem>(TItem, TweenOptions)
  nameWithType: CommonExtensions.Tween<TItem>(TItem, TweenOptions)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<TItem>(TItem, FriedSynapse.FlowEnt.TweenOptions)
  nameWithType.vb: CommonExtensions.Tween(Of TItem)(TItem, TweenOptions)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of TItem)(TItem, FriedSynapse.FlowEnt.TweenOptions)
  name.vb: Tween(Of TItem)(TItem, TweenOptions)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,FriedSynapse.FlowEnt.TweenOptions)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_FriedSynapse_FlowEnt_TweenOptions_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.TweenOptions
    name: TweenOptions
    href: FriedSynapse.FlowEnt.TweenOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  commentId: M:FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
  isExternal: true
  href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  name: Tween<TItem>(TItem, float, bool)
  nameWithType: CommonExtensions.Tween<TItem>(TItem, float, bool)
  fullName: FriedSynapse.FlowEnt.CommonExtensions.Tween<TItem>(TItem, float, bool)
  nameWithType.vb: CommonExtensions.Tween(Of TItem)(TItem, Single, Boolean)
  fullName.vb: FriedSynapse.FlowEnt.CommonExtensions.Tween(Of TItem)(TItem, Single, Boolean)
  name.vb: Tween(Of TItem)(TItem, Single, Boolean)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.CommonExtensions.Tween``1(``0,System.Single,System.Boolean)
    name: Tween
    href: FriedSynapse.FlowEnt.CommonExtensions.html#FriedSynapse_FlowEnt_CommonExtensions_Tween__1___0_System_Single_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  isExternal: true
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Button_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  name: Button(Echo, string, Action<float>)
  nameWithType: InputMotionExtensions.Button(Echo, string, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo, string, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.Button(Echo, String, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo, String, System.Action(Of Single))
  name.vb: Button(Echo, String, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: Button
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Button_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Button(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: Button
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Button_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.InputMotionExtensions
  commentId: T:FriedSynapse.FlowEnt.InputMotionExtensions
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html
  name: InputMotionExtensions
  nameWithType: InputMotionExtensions
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions
- uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  isExternal: true
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonDown_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  name: ButtonDown(Echo, string, Action<float>)
  nameWithType: InputMotionExtensions.ButtonDown(Echo, string, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo, string, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.ButtonDown(Echo, String, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo, String, System.Action(Of Single))
  name.vb: ButtonDown(Echo, String, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonDown_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonDown(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonDown_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
  isExternal: true
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonUp_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  name: ButtonUp(Echo, string, Action<float>)
  nameWithType: InputMotionExtensions.ButtonUp(Echo, string, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo, string, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.ButtonUp(Echo, String, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo, String, System.Action(Of Single))
  name.vb: ButtonUp(Echo, String, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonUp_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.ButtonUp(FriedSynapse.FlowEnt.Echo,System.String,System.Action{System.Single})
    name: ButtonUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_ButtonUp_FriedSynapse_FlowEnt_Echo_System_String_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  isExternal: true
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Key_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  name: Key(Echo, KeyCode, Action<float>)
  nameWithType: InputMotionExtensions.Key(Echo, KeyCode, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.Key(Echo, KeyCode, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action(Of Single))
  name.vb: Key(Echo, KeyCode, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: Key
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Key_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.Key(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: Key
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_Key_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  isExternal: true
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyDown_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  name: KeyDown(Echo, KeyCode, Action<float>)
  nameWithType: InputMotionExtensions.KeyDown(Echo, KeyCode, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.KeyDown(Echo, KeyCode, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action(Of Single))
  name.vb: KeyDown(Echo, KeyCode, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyDown_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyDown(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyDown
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyDown_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  commentId: M:FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
  isExternal: true
  href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyUp_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  name: KeyUp(Echo, KeyCode, Action<float>)
  nameWithType: InputMotionExtensions.KeyUp(Echo, KeyCode, Action<float>)
  fullName: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action<float>)
  nameWithType.vb: InputMotionExtensions.KeyUp(Echo, KeyCode, Action(Of Single))
  fullName.vb: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo, KeyCode, System.Action(Of Single))
  name.vb: KeyUp(Echo, KeyCode, Action(Of Single))
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyUp_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.InputMotionExtensions.KeyUp(FriedSynapse.FlowEnt.Echo,KeyCode,System.Action{System.Single})
    name: KeyUp
    href: FriedSynapse.FlowEnt.InputMotionExtensions.html#FriedSynapse_FlowEnt_InputMotionExtensions_KeyUp_FriedSynapse_FlowEnt_Echo_KeyCode_System_Action_System_Single__
  - name: (
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: ','
  - name: " "
  - uid: KeyCode
    name: KeyCode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.SetEvents*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetEvents
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetEvents_FriedSynapse_FlowEnt_EchoEvents_
  name: SetEvents
  nameWithType: Echo.SetEvents
  fullName: FriedSynapse.FlowEnt.Echo.SetEvents
- uid: FriedSynapse.FlowEnt.EchoEvents
  commentId: T:FriedSynapse.FlowEnt.EchoEvents
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.EchoEvents.html
  name: EchoEvents
  nameWithType: EchoEvents
  fullName: FriedSynapse.FlowEnt.EchoEvents
- uid: FriedSynapse.FlowEnt.Echo
  commentId: T:FriedSynapse.FlowEnt.Echo
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.Echo.html
  name: Echo
  nameWithType: Echo
  fullName: FriedSynapse.FlowEnt.Echo
- uid: System.Func{FriedSynapse.FlowEnt.EchoEvents,FriedSynapse.FlowEnt.EchoEvents}
  commentId: T:System.Func{FriedSynapse.FlowEnt.EchoEvents,FriedSynapse.FlowEnt.EchoEvents}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<EchoEvents, EchoEvents>
  nameWithType: Func<EchoEvents, EchoEvents>
  fullName: System.Func<FriedSynapse.FlowEnt.EchoEvents, FriedSynapse.FlowEnt.EchoEvents>
  nameWithType.vb: Func(Of EchoEvents, EchoEvents)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.EchoEvents, FriedSynapse.FlowEnt.EchoEvents)
  name.vb: Func(Of EchoEvents, EchoEvents)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FriedSynapse.FlowEnt.EchoEvents
    name: EchoEvents
    href: FriedSynapse.FlowEnt.EchoEvents.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoEvents
    name: EchoEvents
    href: FriedSynapse.FlowEnt.EchoEvents.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoEvents
    name: EchoEvents
    href: FriedSynapse.FlowEnt.EchoEvents.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoEvents
    name: EchoEvents
    href: FriedSynapse.FlowEnt.EchoEvents.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.OnStarting*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnStarting
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnStarting_System_Action_
  name: OnStarting
  nameWithType: Echo.OnStarting
  fullName: FriedSynapse.FlowEnt.Echo.OnStarting
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: FriedSynapse.FlowEnt.Echo.OnStarted*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnStarted
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnStarted_System_Action_
  name: OnStarted
  nameWithType: Echo.OnStarted
  fullName: FriedSynapse.FlowEnt.Echo.OnStarted
- uid: FriedSynapse.FlowEnt.Echo.OnUpdating*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnUpdating
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnUpdating_System_Action_System_Single__
  name: OnUpdating
  nameWithType: Echo.OnUpdating
  fullName: FriedSynapse.FlowEnt.Echo.OnUpdating
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<float>
  nameWithType: Action<float>
  fullName: System.Action<float>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.OnUpdated*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnUpdated
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnUpdated_System_Action_System_Single__
  name: OnUpdated
  nameWithType: Echo.OnUpdated
  fullName: FriedSynapse.FlowEnt.Echo.OnUpdated
- uid: FriedSynapse.FlowEnt.Echo.OnLoopStarted*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnLoopStarted
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnLoopStarted_System_Action_System_Nullable_System_Int32___
  name: OnLoopStarted
  nameWithType: Echo.OnLoopStarted
  fullName: FriedSynapse.FlowEnt.Echo.OnLoopStarted
- uid: System.Action{System.Nullable{System.Int32}}
  commentId: T:System.Action{System.Nullable{System.Int32}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<int?>
  nameWithType: Action<int?>
  fullName: System.Action<int?>
  nameWithType.vb: Action(Of Integer?)
  fullName.vb: System.Action(Of Integer?)
  name.vb: Action(Of Integer?)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.OnLoopCompleted*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnLoopCompleted
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnLoopCompleted_System_Action_System_Nullable_System_Int32___
  name: OnLoopCompleted
  nameWithType: Echo.OnLoopCompleted
  fullName: FriedSynapse.FlowEnt.Echo.OnLoopCompleted
- uid: FriedSynapse.FlowEnt.Echo.OnCompleting*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnCompleting
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnCompleting_System_Action_
  name: OnCompleting
  nameWithType: Echo.OnCompleting
  fullName: FriedSynapse.FlowEnt.Echo.OnCompleting
- uid: FriedSynapse.FlowEnt.Echo.OnCompleted*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.OnCompleted
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_OnCompleted_System_Action_
  name: OnCompleted
  nameWithType: Echo.OnCompleted
  fullName: FriedSynapse.FlowEnt.Echo.OnCompleted
- uid: FriedSynapse.FlowEnt.Echo.Timeout*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Timeout
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Timeout
  name: Timeout
  nameWithType: Echo.Timeout
  fullName: FriedSynapse.FlowEnt.Echo.Timeout
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.StopCondition*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.StopCondition
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_StopCondition
  name: StopCondition
  nameWithType: Echo.StopCondition
  fullName: FriedSynapse.FlowEnt.Echo.StopCondition
- uid: System.Func{System.Single,System.Boolean}
  commentId: T:System.Func{System.Single,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<float, bool>
  nameWithType: Func<float, bool>
  fullName: System.Func<float, bool>
  nameWithType.vb: Func(Of Single, Boolean)
  fullName.vb: System.Func(Of Single, Boolean)
  name.vb: Func(Of Single, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.Conditional*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Conditional
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Conditional_System_Func_System_Boolean__System_Action_FriedSynapse_FlowEnt_Echo__
  name: Conditional
  nameWithType: Echo.Conditional
  fullName: FriedSynapse.FlowEnt.Echo.Conditional
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{FriedSynapse.FlowEnt.Echo}
  commentId: T:System.Action{FriedSynapse.FlowEnt.Echo}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Echo>
  nameWithType: Action<Echo>
  fullName: System.Action<FriedSynapse.FlowEnt.Echo>
  nameWithType.vb: Action(Of Echo)
  fullName.vb: System.Action(Of FriedSynapse.FlowEnt.Echo)
  name.vb: Action(Of Echo)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.SetOptions*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetOptions
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetOptions_FriedSynapse_FlowEnt_EchoOptions_
  name: SetOptions
  nameWithType: Echo.SetOptions
  fullName: FriedSynapse.FlowEnt.Echo.SetOptions
- uid: FriedSynapse.FlowEnt.EchoOptions
  commentId: T:FriedSynapse.FlowEnt.EchoOptions
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.EchoOptions.html
  name: EchoOptions
  nameWithType: EchoOptions
  fullName: FriedSynapse.FlowEnt.EchoOptions
- uid: System.Func{FriedSynapse.FlowEnt.EchoOptions,FriedSynapse.FlowEnt.EchoOptions}
  commentId: T:System.Func{FriedSynapse.FlowEnt.EchoOptions,FriedSynapse.FlowEnt.EchoOptions}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<EchoOptions, EchoOptions>
  nameWithType: Func<EchoOptions, EchoOptions>
  fullName: System.Func<FriedSynapse.FlowEnt.EchoOptions, FriedSynapse.FlowEnt.EchoOptions>
  nameWithType.vb: Func(Of EchoOptions, EchoOptions)
  fullName.vb: System.Func(Of FriedSynapse.FlowEnt.EchoOptions, FriedSynapse.FlowEnt.EchoOptions)
  name.vb: Func(Of EchoOptions, EchoOptions)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: ','
  - name: " "
  - uid: FriedSynapse.FlowEnt.EchoOptions
    name: EchoOptions
    href: FriedSynapse.FlowEnt.EchoOptions.html
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.SetName*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetName
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetName_System_String_
  name: SetName
  nameWithType: Echo.SetName
  fullName: FriedSynapse.FlowEnt.Echo.SetName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: FriedSynapse.FlowEnt.Echo.SetUpdateType*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetUpdateType
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetUpdateType_FriedSynapse_FlowEnt_UpdateType_
  name: SetUpdateType
  nameWithType: Echo.SetUpdateType
  fullName: FriedSynapse.FlowEnt.Echo.SetUpdateType
- uid: FriedSynapse.FlowEnt.UpdateType
  commentId: T:FriedSynapse.FlowEnt.UpdateType
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.UpdateType.html
  name: UpdateType
  nameWithType: UpdateType
  fullName: FriedSynapse.FlowEnt.UpdateType
- uid: FriedSynapse.FlowEnt.Echo.SetAutoStart*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetAutoStart
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetAutoStart_System_Boolean_
  name: SetAutoStart
  nameWithType: Echo.SetAutoStart
  fullName: FriedSynapse.FlowEnt.Echo.SetAutoStart
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FriedSynapse.FlowEnt.Echo.SetSkipFrames*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetSkipFrames
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetSkipFrames_System_Int32_
  name: SetSkipFrames
  nameWithType: Echo.SetSkipFrames
  fullName: FriedSynapse.FlowEnt.Echo.SetSkipFrames
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: FriedSynapse.FlowEnt.Echo.SetDelay*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetDelay
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetDelay_System_Single_
  name: SetDelay
  nameWithType: Echo.SetDelay
  fullName: FriedSynapse.FlowEnt.Echo.SetDelay
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: FriedSynapse.FlowEnt.Echo.SetDelayUntil*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetDelayUntil
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetDelayUntil_System_Func_System_Boolean__
  name: SetDelayUntil
  nameWithType: Echo.SetDelayUntil
  fullName: FriedSynapse.FlowEnt.Echo.SetDelayUntil
- uid: FriedSynapse.FlowEnt.Echo.SetLoopCount*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetLoopCount
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetLoopCount_System_Nullable_System_Int32__
  name: SetLoopCount
  nameWithType: Echo.SetLoopCount
  fullName: FriedSynapse.FlowEnt.Echo.SetLoopCount
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: FriedSynapse.FlowEnt.Echo.SetTimeScale*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetTimeScale
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetTimeScale_System_Single_
  name: SetTimeScale
  nameWithType: Echo.SetTimeScale
  fullName: FriedSynapse.FlowEnt.Echo.SetTimeScale
- uid: FriedSynapse.FlowEnt.Echo.SetTimeout*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetTimeout
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetTimeout_System_Nullable_System_Single__
  name: SetTimeout
  nameWithType: Echo.SetTimeout
  fullName: FriedSynapse.FlowEnt.Echo.SetTimeout
- uid: FriedSynapse.FlowEnt.Echo.SetStopCondition*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.SetStopCondition
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_SetStopCondition_System_Func_System_Single_System_Boolean__
  name: SetStopCondition
  nameWithType: Echo.SetStopCondition
  fullName: FriedSynapse.FlowEnt.Echo.SetStopCondition
- uid: FriedSynapse.FlowEnt.Echo.#ctor*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.#ctor
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo__ctor_FriedSynapse_FlowEnt_EchoOptions_
  name: Echo
  nameWithType: Echo.Echo
  fullName: FriedSynapse.FlowEnt.Echo.Echo
  nameWithType.vb: Echo.New
  fullName.vb: FriedSynapse.FlowEnt.Echo.New
  name.vb: New
- uid: FriedSynapse.FlowEnt.AnimationException
  commentId: T:FriedSynapse.FlowEnt.AnimationException
  href: FriedSynapse.FlowEnt.AnimationException.html
  name: AnimationException
  nameWithType: AnimationException
  fullName: FriedSynapse.FlowEnt.AnimationException
- uid: FriedSynapse.FlowEnt.Echo.Start*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Start
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Start
  name: Start
  nameWithType: Echo.Start
  fullName: FriedSynapse.FlowEnt.Echo.Start
- uid: FriedSynapse.FlowEnt.Echo.StartAsync*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.StartAsync
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_StartAsync_System_Nullable_System_Threading_CancellationToken__
  name: StartAsync
  nameWithType: Echo.StartAsync
  fullName: FriedSynapse.FlowEnt.Echo.StartAsync
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{FriedSynapse.FlowEnt.Echo}
  commentId: T:System.Threading.Tasks.Task{FriedSynapse.FlowEnt.Echo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Echo>
  nameWithType: Task<Echo>
  fullName: System.Threading.Tasks.Task<FriedSynapse.FlowEnt.Echo>
  nameWithType.vb: Task(Of Echo)
  fullName.vb: System.Threading.Tasks.Task(Of FriedSynapse.FlowEnt.Echo)
  name.vb: Task(Of Echo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Echo
    name: Echo
    href: FriedSynapse.FlowEnt.Echo.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FriedSynapse.FlowEnt.Echo.Resume*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Resume
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Resume
  name: Resume
  nameWithType: Echo.Resume
  fullName: FriedSynapse.FlowEnt.Echo.Resume
- uid: FriedSynapse.FlowEnt.Echo.Pause*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Pause
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Pause
  name: Pause
  nameWithType: Echo.Pause
  fullName: FriedSynapse.FlowEnt.Echo.Pause
- uid: FriedSynapse.FlowEnt.Echo.Stop*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Stop
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Stop_System_Boolean_
  name: Stop
  nameWithType: Echo.Stop
  fullName: FriedSynapse.FlowEnt.Echo.Stop
- uid: FriedSynapse.FlowEnt.Echo.Reset*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Reset
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Reset
  name: Reset
  nameWithType: Echo.Reset
  fullName: FriedSynapse.FlowEnt.Echo.Reset
- uid: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
  commentId: M:FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
  parent: FriedSynapse.FlowEnt.AbstractAnimation
  href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_ResetInternal
  name: ResetInternal()
  nameWithType: AbstractAnimation.ResetInternal()
  fullName: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal()
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
    name: ResetInternal
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_ResetInternal
  - name: (
  - name: )
  spec.vb:
  - uid: FriedSynapse.FlowEnt.AbstractAnimation.ResetInternal
    name: ResetInternal
    href: FriedSynapse.FlowEnt.AbstractAnimation.html#FriedSynapse_FlowEnt_AbstractAnimation_ResetInternal
  - name: (
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.ResetInternal*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.ResetInternal
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_ResetInternal
  name: ResetInternal
  nameWithType: Echo.ResetInternal
  fullName: FriedSynapse.FlowEnt.Echo.ResetInternal
- uid: FriedSynapse.FlowEnt.Echo.Apply*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.Apply
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_Apply_FriedSynapse_FlowEnt_Motions_Echo_Abstract_AbstractEchoMotion___
  name: Apply
  nameWithType: Echo.Apply
  fullName: FriedSynapse.FlowEnt.Echo.Apply
- uid: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[]
  isExternal: true
  href: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion.html
  name: AbstractEchoMotion[]
  nameWithType: AbstractEchoMotion[]
  fullName: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion[]
  nameWithType.vb: AbstractEchoMotion()
  fullName.vb: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion()
  name.vb: AbstractEchoMotion()
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion
    name: AbstractEchoMotion
    href: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion
    name: AbstractEchoMotion
    href: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion.html
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion}
  commentId: T:System.Collections.Generic.IEnumerable{FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<AbstractEchoMotion>
  nameWithType: IEnumerable<AbstractEchoMotion>
  fullName: System.Collections.Generic.IEnumerable<FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion>
  nameWithType.vb: IEnumerable(Of AbstractEchoMotion)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion)
  name.vb: IEnumerable(Of AbstractEchoMotion)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion
    name: AbstractEchoMotion
    href: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion
    name: AbstractEchoMotion
    href: FriedSynapse.FlowEnt.Motions.Echo.Abstract.AbstractEchoMotion.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: FriedSynapse.FlowEnt.Echo.For*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.For
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_For__1___0_
  name: For
  nameWithType: Echo.For
  fullName: FriedSynapse.FlowEnt.Echo.For
- uid: '{TItem}'
  commentId: '!:TItem'
  definition: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: FriedSynapse.FlowEnt.EchoMotionProxy{{TItem}}
  commentId: T:FriedSynapse.FlowEnt.EchoMotionProxy{``0}
  parent: FriedSynapse.FlowEnt
  definition: FriedSynapse.FlowEnt.EchoMotionProxy`1
  href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  name: EchoMotionProxy<TItem>
  nameWithType: EchoMotionProxy<TItem>
  fullName: FriedSynapse.FlowEnt.EchoMotionProxy<TItem>
  nameWithType.vb: EchoMotionProxy(Of TItem)
  fullName.vb: FriedSynapse.FlowEnt.EchoMotionProxy(Of TItem)
  name.vb: EchoMotionProxy(Of TItem)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
  commentId: T:FriedSynapse.FlowEnt.EchoMotionProxy`1
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  name: EchoMotionProxy<TItem>
  nameWithType: EchoMotionProxy<TItem>
  fullName: FriedSynapse.FlowEnt.EchoMotionProxy<TItem>
  nameWithType.vb: EchoMotionProxy(Of TItem)
  fullName.vb: FriedSynapse.FlowEnt.EchoMotionProxy(Of TItem)
  name.vb: EchoMotionProxy(Of TItem)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: '{TItem}[]'
  isExternal: true
  name: TItem[]
  nameWithType: TItem[]
  fullName: TItem[]
  nameWithType.vb: TItem()
  fullName.vb: TItem()
  name.vb: TItem()
  spec.csharp:
  - name: TItem
  - name: '['
  - name: ']'
  spec.vb:
  - name: TItem
  - name: (
  - name: )
- uid: FriedSynapse.FlowEnt.EchoMotionProxyArray{{TItem}}
  commentId: T:FriedSynapse.FlowEnt.EchoMotionProxyArray{``0}
  parent: FriedSynapse.FlowEnt
  definition: FriedSynapse.FlowEnt.EchoMotionProxyArray`1
  href: FriedSynapse.FlowEnt.EchoMotionProxyArray-1.html
  name: EchoMotionProxyArray<TItem>
  nameWithType: EchoMotionProxyArray<TItem>
  fullName: FriedSynapse.FlowEnt.EchoMotionProxyArray<TItem>
  nameWithType.vb: EchoMotionProxyArray(Of TItem)
  fullName.vb: FriedSynapse.FlowEnt.EchoMotionProxyArray(Of TItem)
  name.vb: EchoMotionProxyArray(Of TItem)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxyArray`1
    name: EchoMotionProxyArray
    href: FriedSynapse.FlowEnt.EchoMotionProxyArray-1.html
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxyArray`1
    name: EchoMotionProxyArray
    href: FriedSynapse.FlowEnt.EchoMotionProxyArray-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: FriedSynapse.FlowEnt.EchoMotionProxyArray`1
  commentId: T:FriedSynapse.FlowEnt.EchoMotionProxyArray`1
  href: FriedSynapse.FlowEnt.EchoMotionProxyArray-1.html
  name: EchoMotionProxyArray<TItem>
  nameWithType: EchoMotionProxyArray<TItem>
  fullName: FriedSynapse.FlowEnt.EchoMotionProxyArray<TItem>
  nameWithType.vb: EchoMotionProxyArray(Of TItem)
  fullName.vb: FriedSynapse.FlowEnt.EchoMotionProxyArray(Of TItem)
  name.vb: EchoMotionProxyArray(Of TItem)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxyArray`1
    name: EchoMotionProxyArray
    href: FriedSynapse.FlowEnt.EchoMotionProxyArray-1.html
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxyArray`1
    name: EchoMotionProxyArray
    href: FriedSynapse.FlowEnt.EchoMotionProxyArray-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: FriedSynapse.FlowEnt.Echo.ForAll*
  commentId: Overload:FriedSynapse.FlowEnt.Echo.ForAll
  href: FriedSynapse.FlowEnt.Echo.html#FriedSynapse_FlowEnt_Echo_ForAll__1_System_Collections_Generic_IEnumerable___0__
  name: ForAll
  nameWithType: Echo.ForAll
  fullName: FriedSynapse.FlowEnt.Echo.ForAll
- uid: System.Collections.Generic.IEnumerable{{TItem}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TItem>
  nameWithType: IEnumerable<TItem>
  fullName: System.Collections.Generic.IEnumerable<TItem>
  nameWithType.vb: IEnumerable(Of TItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TItem)
  name.vb: IEnumerable(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
