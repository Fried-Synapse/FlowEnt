### YamlMime:ManagedReference
items:
- uid: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions
  commentId: T:FriedSynapse.FlowEnt.CharacterControllerMotionExtensions
  id: CharacterControllerMotionExtensions
  parent: FriedSynapse.FlowEnt
  children:
  - FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},System.Single)
  - FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},Transform,System.Single)
  langs:
  - csharp
  - vb
  name: CharacterControllerMotionExtensions
  nameWithType: CharacterControllerMotionExtensions
  fullName: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions
  type: Class
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/CharacterControllerMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: CharacterControllerMotionExtensions
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/CharacterControllerMotionExtensions.cs
    startLine: 5
  namespace: FriedSynapse.FlowEnt
  syntax:
    content: public static class CharacterControllerMotionExtensions
    content.vb: Public Module CharacterControllerMotionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},System.Single)
  commentId: M:FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},System.Single)
  id: MoveByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions
  langs:
  - csharp
  - vb
  name: MoveByInput<TCharacterController>(EchoMotionProxy<TCharacterController>, float)
  nameWithType: CharacterControllerMotionExtensions.MoveByInput<TCharacterController>(EchoMotionProxy<TCharacterController>, float)
  fullName: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput<TCharacterController>(FriedSynapse.FlowEnt.EchoMotionProxy<TCharacterController>, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/CharacterControllerMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: MoveByInput
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/CharacterControllerMotionExtensions.cs
    startLine: 12
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.MoveByInputMotion" data-throw-if-not-resolved="false"></xref> to the echo.
  example: []
  syntax:
    content: 'public static EchoMotionProxy<TCharacterController> MoveByInput<TCharacterController>(this EchoMotionProxy<TCharacterController> proxy, float speed = 1) where TCharacterController : CharacterController'
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.EchoMotionProxy{{TCharacterController}}
      description: ''
    - id: speed
      type: System.Single
      description: ''
    typeParameters:
    - id: TCharacterController
    return:
      type: FriedSynapse.FlowEnt.EchoMotionProxy{{TCharacterController}}
    content.vb: Public Shared Function MoveByInput(Of TCharacterController As CharacterController)(proxy As EchoMotionProxy(Of TCharacterController), speed As Single = 1) As EchoMotionProxy(Of TCharacterController)
  overload: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput*
  nameWithType.vb: CharacterControllerMotionExtensions.MoveByInput(Of TCharacterController)(EchoMotionProxy(Of TCharacterController), Single)
  fullName.vb: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput(Of TCharacterController)(FriedSynapse.FlowEnt.EchoMotionProxy(Of TCharacterController), Single)
  name.vb: MoveByInput(Of TCharacterController)(EchoMotionProxy(Of TCharacterController), Single)
- uid: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},Transform,System.Single)
  commentId: M:FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},Transform,System.Single)
  id: RotateByInput``1(FriedSynapse.FlowEnt.EchoMotionProxy{``0},Transform,System.Single)
  isExtensionMethod: true
  parent: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions
  langs:
  - csharp
  - vb
  name: RotateByInput<TCharacterController>(EchoMotionProxy<TCharacterController>, Transform, float)
  nameWithType: CharacterControllerMotionExtensions.RotateByInput<TCharacterController>(EchoMotionProxy<TCharacterController>, Transform, float)
  fullName: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput<TCharacterController>(FriedSynapse.FlowEnt.EchoMotionProxy<TCharacterController>, Transform, float)
  type: Method
  source:
    remote:
      path: Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/CharacterControllerMotionExtensions.cs
      branch: docs/191-add_manual
      repo: https://github.com/Fried-Synapse/FlowEnt
    id: RotateByInput
    path: ../Assets/FlowEnt/Scripts/Runtime/Extensions/Engine/CharacterControllerMotionExtensions.cs
    startLine: 22
  namespace: FriedSynapse.FlowEnt
  summary: Applies a <xref href="FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.RotateByInputMotion" data-throw-if-not-resolved="false"></xref> to the echo.
  example: []
  syntax:
    content: 'public static EchoMotionProxy<TCharacterController> RotateByInput<TCharacterController>(this EchoMotionProxy<TCharacterController> proxy, Transform camera, float speed = 5) where TCharacterController : CharacterController'
    parameters:
    - id: proxy
      type: FriedSynapse.FlowEnt.EchoMotionProxy{{TCharacterController}}
      description: ''
    - id: camera
      type: Transform
      description: ''
    - id: speed
      type: System.Single
      description: ''
    typeParameters:
    - id: TCharacterController
    return:
      type: FriedSynapse.FlowEnt.EchoMotionProxy{{TCharacterController}}
    content.vb: Public Shared Function RotateByInput(Of TCharacterController As CharacterController)(proxy As EchoMotionProxy(Of TCharacterController), camera As Transform, speed As Single = 5) As EchoMotionProxy(Of TCharacterController)
  overload: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput*
  nameWithType.vb: CharacterControllerMotionExtensions.RotateByInput(Of TCharacterController)(EchoMotionProxy(Of TCharacterController), Transform, Single)
  fullName.vb: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput(Of TCharacterController)(FriedSynapse.FlowEnt.EchoMotionProxy(Of TCharacterController), Transform, Single)
  name.vb: RotateByInput(Of TCharacterController)(EchoMotionProxy(Of TCharacterController), Transform, Single)
references:
- uid: FriedSynapse.FlowEnt
  commentId: N:FriedSynapse.FlowEnt
  href: FriedSynapse.html
  name: FriedSynapse.FlowEnt
  nameWithType: FriedSynapse.FlowEnt
  fullName: FriedSynapse.FlowEnt
  spec.csharp:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
  spec.vb:
  - uid: FriedSynapse
    name: FriedSynapse
    href: FriedSynapse.html
  - name: .
  - uid: FriedSynapse.FlowEnt
    name: FlowEnt
    href: FriedSynapse.FlowEnt.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.MoveByInputMotion
  commentId: T:FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.MoveByInputMotion
  href: FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.MoveByInputMotion.html
  name: MoveByInputMotion
  nameWithType: MoveByInputMotion
  fullName: FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.MoveByInputMotion
- uid: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput*
  commentId: Overload:FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput
  href: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.html#FriedSynapse_FlowEnt_CharacterControllerMotionExtensions_MoveByInput__1_FriedSynapse_FlowEnt_EchoMotionProxy___0__System_Single_
  name: MoveByInput
  nameWithType: CharacterControllerMotionExtensions.MoveByInput
  fullName: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.MoveByInput
- uid: FriedSynapse.FlowEnt.EchoMotionProxy{{TCharacterController}}
  commentId: T:FriedSynapse.FlowEnt.EchoMotionProxy{``0}
  parent: FriedSynapse.FlowEnt
  definition: FriedSynapse.FlowEnt.EchoMotionProxy`1
  href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  name: EchoMotionProxy<TCharacterController>
  nameWithType: EchoMotionProxy<TCharacterController>
  fullName: FriedSynapse.FlowEnt.EchoMotionProxy<TCharacterController>
  nameWithType.vb: EchoMotionProxy(Of TCharacterController)
  fullName.vb: FriedSynapse.FlowEnt.EchoMotionProxy(Of TCharacterController)
  name.vb: EchoMotionProxy(Of TCharacterController)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: <
  - name: TCharacterController
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TCharacterController
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
  commentId: T:FriedSynapse.FlowEnt.EchoMotionProxy`1
  parent: FriedSynapse.FlowEnt
  href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  name: EchoMotionProxy<TItem>
  nameWithType: EchoMotionProxy<TItem>
  fullName: FriedSynapse.FlowEnt.EchoMotionProxy<TItem>
  nameWithType.vb: EchoMotionProxy(Of TItem)
  fullName.vb: FriedSynapse.FlowEnt.EchoMotionProxy(Of TItem)
  name.vb: EchoMotionProxy(Of TItem)
  spec.csharp:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: <
  - name: TItem
  - name: '>'
  spec.vb:
  - uid: FriedSynapse.FlowEnt.EchoMotionProxy`1
    name: EchoMotionProxy
    href: FriedSynapse.FlowEnt.EchoMotionProxy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
- uid: FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.RotateByInputMotion
  commentId: T:FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.RotateByInputMotion
  href: FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.RotateByInputMotion.html
  name: RotateByInputMotion
  nameWithType: RotateByInputMotion
  fullName: FriedSynapse.FlowEnt.Motions.Echo.CharacterControllers.RotateByInputMotion
- uid: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput*
  commentId: Overload:FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput
  href: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.html#FriedSynapse_FlowEnt_CharacterControllerMotionExtensions_RotateByInput__1_FriedSynapse_FlowEnt_EchoMotionProxy___0__Transform_System_Single_
  name: RotateByInput
  nameWithType: CharacterControllerMotionExtensions.RotateByInput
  fullName: FriedSynapse.FlowEnt.CharacterControllerMotionExtensions.RotateByInput
- uid: Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
